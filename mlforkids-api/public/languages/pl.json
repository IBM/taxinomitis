{
    "APP": {
        "TITLE": "Sztuczna Inteligencja dla dzieci",
        "BACK": "Powrót",
        "NEXT": "Next",
        "BACKTOPROJECT": "Powrót do projektu",
        "BACKTOMODEL": "Powrót do modelu",
        "ERROR": "Bląd",
        "WARNING": "Uwaga",
        "INFO": "Informacja",
        "ADD": "Dodać",
        "CANCEL": "Anulować",
        "DELETE": "Usunąć",
        "EDIT": "Redagować",
        "TEST": "Test",
        "RESET": "Resetowanie",
        "ABOUT": "O programie",
        "TEACHER": "Nauczyciel",
        "PROJECTS": "Projekty",
        "WORKSHEETS": "Arkusze",
        "PRETRAINED": "Pretrained",
        "NEWS": "Nowiny",
        "STORIES": "Stories",
        "HELP": "Pomoc",
        "LOGIN": "Zalogować się",
        "LOGOUT": "Wylogować się",
        "BETA": "Beta",
        "INCOMPLETE": "Niedokończony!"
    },
    "ABOUT": {
        "TITLE": "Sztuczna Inteligencja dla dzieci",
        "IN6SECS": "Za 6 sekund...",
        "IN20MINS": "Za 20 minut...",
        "WHAT": {
            "TITLE": "Co?",
            "BODY": "To darmowe narzędzie wprowadza do nauki maszynowej, dostarczając praktycznych doświadczeń w zakresie szkolenia systemów uczenia się maszyn i budowania z nimi rzeczy. <br/><br/>Zapewnia ono łatwe w użyciu środowisko do szkolenia modeli uczenia się maszyn w zakresie rozpoznawania tekstu, liczb, obrazów lub dźwięków.<br/><br/>Opiera się to na istniejących wysiłkach mających na celu wprowadzenie i nauczanie dzieci kodowania poprzez dodanie tych modeli do edukacyjnych platform kodowania<a href='https://scratch.mit.edu/about' target='_blank'>Scratch</a>i<a href='http://appinventor.mit.edu/' target='_blank'>App Inventor</a>oraz pomoc dzieciom w tworzeniu projektów i budowaniu gier z modelami uczenia się maszynowego, które trenują. <br/><br/>Narzędzie to zostało udostępnione po raz pierwszy w 2017 roku i jest obecnie<a href='https://wakelet.com/wake/4d3680cb-2a11-49ab-9180-fcfeced48393' target='_blank'>używane przez tysiące szkół, klubów kodowania i rodzin na całym świecie</a>.<br/><br/>Aby dowiedzieć się więcej, spójrz na to:"
        },
        "WHY": {
            "TITLE": "Dlaczego?",
            "BODY": "Sztyczna inteligencja jest wszędzie wokół nas. Wszyscy na co dzień korzystamy z systemów nauki maszynowej - takich jak filtry antyspamowe, silniki rekomendacji, usługi tłumaczenia językowego, czatboty i asystenci cyfrowi, wyszukiwarki i systemy wykrywania oszustw.<br/><br/>Wkrótce normalnym zjawiskiem w systemach nauki maszynowej będzie prowadzenie naszych samochodów i pomaganie lekarzom w diagnozowaniu i leczeniu naszych chorób. <br/><br/>Ważne jest, aby dzieci były świadome tego, jak działa nasz świat. Najlepszym sposobem zrozumienia możliwości i implikacji jest umiejętność samodzielnego budowania przy użyciu tej technologii. <br/><br/>Aby dowiedzieć się więcej, przeczytaj:<a target='_blank' class='btn btn-primary' href='http://dalelane.co.uk/blog/?p=3513'> \"Wprowadzenie nauki maszynowej dla dzieci\".</a>"
        },
        "TECH": {
            "TITLE": "Technika",
            "BODY": "Narzędzie jest w całości oparte na sieci i nie wymaga żadnych instalacji ani skomplikowanych ustawień, aby móc z niego korzystać. <br/><br/>Zostało ono zaprojektowane do użytku w klasie przez szkoły i grupy kodowania prowadzone przez wolontariuszy dla dzieci, i zapewnia stronę administratora dla nauczycieli lub liderów grup, aby móc zarządzać i administrować dostępem dla swoich uczniów. <br/><br/>Jest budowane przez <a target='_blank' href='http://dalelane.co.uk/'>Dale Lane</a> przy użyciu API z <a target='_blank' href='https://www.ibm.com/watson/developer/'>IBM Watson</a>. <br/><br/>Więcej szczegółów na temat wdrożenia, można zobaczyć <a target='_blank' href='https://github.com/IBM/taxinomitis/'>kod źródłowy na GitHub</a>, lub przeczytać niektóre posty na <a target='_blank' href='http://dalelane.co.uk/blog/?tag=mlforkids-tech'>blogu na temat technologii</a>. ",
            "LOGIN": "Zaczynamy:"
        },
        "PRETRAINED": {
            "BODY": "Pre-trained models are also provided for students to use in their projects. These advanced models enable projects that might otherwise be too complex for students to train for themselves, and provide useful hands-on insights into some of the other things that machine learning can do."
        },
        "FURTHER": {
            "TITLE": "Dalsza nauka",
            "BODY": "Machine Learning for Kids jest użytecznym narzędziem do wprowadzenia dzieci w sposób, w jaki szkolone są systemy ML, w jaki sposób są one wykorzystywane i niektóre z realnych implikacji zastosowań AI. <br/><br/>Dodatkowe materiały dydaktyczne i dydaktyczne, w tym materiały dydaktyczne dotyczące wewnętrznych aspektów systemów ML, można znaleźć na stronie internetowej: "
        }
    },
    "NEWS": {
        "TITLE": "Nowiny",
        "UPDATES": {
            "TITLE": "Nowości i Aktualizacje",
            "DESCRIPTION": "Nowości i aktualizacje z @MLforKids"
        },
        "MENTIONS": {
            "TITLE": "Wzmianki i Media",
            "DESCRIPTION": "loading Mentions &amp; Media from wakelet.com"
        }
    },
    "LINKS": {
        "TITLE": "Zasoby edukacyjne Sztucznej Inteligencji dla dzieci",
        "INTRO": "Ta strona jest listą dalszych narzędzi i zasobów służących wyjaśnianiu sztucznej inteligencji dzieciom.",
        "ECRAFT2LEARN": {
            "BODY1": "<a href='http://users.ox.ac.uk/~oucs0030/' target='_blank'>Ken Kahn</a> stworzył zasoby umożliwiające początkującym tworzenie programów AI w Snap! (wizualne środowisko programowania podobne do Scratch).",
            "BODY2": "Podczas gdy ja skupiłem się na wyjaśnieniu, w jaki sposób systemy AI są szkolone i zachowują się (i rzeczywistym użytkowaniu), eCraft2Learn posiada fantastyczne zasoby, które głęboko nurkują w to, jak działają systemy ML (Machine Learning, czyli Uczenia Maszynowego).",
            "BODY3": "Szczególnie fascynujący jest <a href='https://ecraft2learn.github.io/ai/AI-Teacher-Guide/chapter-6.html' target='_blank'>projekt sieci neuronowej Tic Tac Toe</a>, który pozwala studentom eksperymentować z hiperparametrami z Snap."
        },
        "STEMLEARNING": {
            "BODY1": "STEM Learning and the UK Department for Business, Energy and Industrial Strategy have created resources for teaching the principles of artificial intelligence.",
            "BODY2": "These resources include <em>Machine Learning for Kids</em> projects, supplemented with teaching notes, presentation materials, prompt cards, and practical “unplugged” activities"
        },
        "RASPBERRYPI": {
            "BODY1": "The Raspberry Pi Foundation provides resources for Code Clubs, with step-by-step instructions for a variety of creative projects.",
            "BODY2": "Their machine learning pathway includes a variety of projects from <em>Machine Learning for Kids</em>."
        },
        "APPSFORGOOD": {
            "BODY1": "Apps for Good to brytyjska organizacja non-profit, która tworzy zasoby do nauczania przedmiotów technicznych, które udostępnia bezpłatnie szkołom.",
            "BODY2": "Ich kurs Machine Learning wykorzystuje <em>Machine Learning for Kids</em> i uzupełnia go o szereg dodatkowych materiałów, takich jak schematy pracy, plany lekcji, podręczniki dla studentów, prezentacje i wiele innych. Ułatwia to szkołom dostarczanie lekcji ML, które umieszczają ćwiczenia kodowania w kontekście."
        },
        "AIFAMILYCHALLENGE": {
            "BODY1": "AI Family Challenge to bezpłatny, praktyczny program edukacyjny dla rodzin. Korzystają z <em>Machine Learning for Kids</em> i uzupełniają go dodatkowym wsparciem, takim jak trenerzy techniczni i mentorzy, ustrukturyzowany plan lekcji i filmy pomocnicze.",
            "BODY2": "Program opiera się na konkursie, w którym dzieci muszą zastanowić się nad własnymi pomysłami na projekt Sztucznej Inteligencji, przy wsparciu rodzin i mentorów technicznych."
        },
        "MAGENTADEMOS": {
            "BODY1": "Online toys that demonstrate different aspects of machine learning, using TensorFlow.js"
        },
        "AIINSCHOOLS": {
            "BODY1": "Program AIinSchools zapewnia nauczycielom bezpłatny plan lekcji objaśniający AI dla 9 klasy (wieku 13-14 lat).",
            "BODY2": "Obejmuje ona zarówno zajęcia w salach lekcyjnych bez podłączeń, jak i działania programistyczne w zakresie szkolenia sieci neuronowych na jednostkach GPU pracujących w systemie AWS."
        },
        "TEENSINAI": {
            "BODY1": "Nastolatki w SI wykorzystują kombinację hakatonów, akceleratorów i bootcampów, aby wspierać młodych ludzi w wieku 12-18 lat w odkrywaniu SI."
        },
        "AI4ALL": {
            "BODY1": "AI4ALL prowadzi obozy letnie dla uczniów szkół średnich w USA, które dają szczegółowe techniczne wprowadzenie do SI."
        },
        "CALYPSO": {
            "BODY1": "Uczniowie z programowalnymi robotami Cozmo mogą korzystać ze środowiska programowania Calypso w celu uzyskania praktycznego sposobu doświadczania sztucznej inteligencji poprzez eksperymentowanie z technikami takimi jak widzenie komputerowe i rozpoznawanie mowy."
        },
        "AIINABOX": {
            "BODY1": "AI-in-a-Box to zestaw robotów, akcesoriów i materiałów dydaktycznych. Zestaw może być używany do nauczania projektów obejmujących takie tematy jak rozpoznawanie wizualne, rozpoznawanie twarzy, generowanie mowy i rozpoznawanie mowy."
        },
        "GOOGLEEXPERIMENTS": {
            "BODY1": "Proste eksperymenty online, aby rozpocząć odkrywanie uczenia się maszynowego, poprzez obrazy, rysunki, język i muzykę."
        },
        "EXPLORINGCS": {
            "BODY1": "Exploring CS gives students AI knowledge and skills while considering social, moral and ethical impacts.",
            "BODY2": "They explore practical daily applications of AI that impact their lives.  Students design smart cities, homes and schools.  They also learn to build, train and test an AI system through an NVIDIA platform and look at how the message of AI is communicated."
        },
        "VIDEOS": {
            "TITLE": "Wideo",
            "INTRO": "Filmy te okazały się również przydatne przy wprowadzaniu koncepcji Sztucznej Inteligencji"
        }
    },
    "ERRORS": {
        "PAGENOTFOUND": "Nie znaleziono strony",
        "NOTLOGGEDIN": "Nie zalogowany",
        "MISSINGPROJECTID": "Brak identyfikatora projektu. Wróć do",
        "IFPERSISTENT": "Jeśli tak się stanie, proszę",
        "LETMEKNOW": "daj mi znać"
    },
    "WELCOME": {
        "TITLE": "Naucz komputer, jak grać w grę.",
        "GET_STARTED": "Zaczynamy",
        "LEARN_MORE": "Dowiedzieć się więcej",
        "ADMIN_LABEL": "Przejdź do <strong>strony administracyjnej</strong>",
        "PROJECT_LABEL": "Przejdź do <strong>Projekty</strong>",
        "STEP_1_TEXT": "Zbierz przykłady rzeczy, które chcesz móc rozpoznać.",
        "STEP_2_TEXT": "Wykorzystaj te przykłady, aby wyszkolić komputer do ich rozpoznawania.",
        "STEP_3_TEXT": "Stwórz grę w Scratch, która wykorzystuje zdolność komputera do ich rozpoznawania."
    },
    "LOGIN": {
        "TITLE": "Zacznij naukę maszynową.",
        "WELCOME": "Witamy! To wspaniale, że jesteś zainteresowany posiadaniem konta, aby zalogować się do Machine Learning for Kids.",
        "ALREADY_LOGGEDIN": "<strong>Informacje: </strong>Już zalogowany",
        "ERROR": "<strong>Bląd:</strong> {{ message }}",
        "ERROR_HELP": "Jeśli tak się dzieje, proszę odwiedzić sekcję pomocy.",
        "FIRST_TIME": "Pierwszy raz tutaj?",
        "SIGN_UP": "Zarejestruj się",
        "WHY_REGISTER": "Dlaczego warto się zarejestrować?",
        "WHY_REGISTER_INTRO_1": "<strong>Nie musisz się rejestrować ani zakładać konta,</strong> aby korzystać z Machine Learning for Kids, ale jeśli to zrobisz, odblokuje to kilka funkcji narzędzia.",
        "WHY_REGISTER_INTRO_2": "Poniższa tabela wyjaśnia różnicę w tym, co możesz zrobić, jeśli klikniesz \"Spróbuj teraz\" bez rejestracji, oraz co możesz zrobić, jeśli założysz konto, z którym będziesz mógł się zalogować.",
        "ALREADY_REGISTERED": "Jesteś już zarejestrowany?",
        "LOGIN": "Zaloguj się",
        "FORGOT_DETAILS": "Zapomniałeś swoich danych?",
        "TRY_TITLE": "Spróbuj bez rejestracji",
        "TRY_NOW": "Spróbuj teraz",
        "WHO_YOU": "Kim jesteś?",
        "TEACHER": "Rodzic, nauczyciel lub przywódca klubu kodowania.",
        "STUDENT": "Student",
        "FORGOT_TEXT": "Zapomniałeś nazwy użytkownika lub hasła? W porządku - wszyscy czasami zapominamy o różnych rzeczach.",
        "ARE_YOU_A_STUDENT": "Jesteś uczniem?",
        "ARE_YOU_A_STUDENT_INTRO_1": "Jeśli Twoja klasa już korzysta z tego narzędzia, poproś nauczyciela lub lidera grupy kodującej o utworzenie konta dla ciebie.",
        "ARE_YOU_A_STUDENT_INTRO_2": "Jeśli Twoja klasa nie korzysta jeszcze z narzędzia, poproś nauczyciela lub lidera grupy kodującej, aby się z nim skontaktował.",
        "RESET_STUDENT_PASSWORD_1": "Jeśli jesteś studentem, nie mamy Twojego adresu e-mail, aby móc wysłać Ci email  resetujący hasło.",
        "RESET_STUDENT_PASSWORD_2": "Ale to żaden problem!",
        "RESET_STUDENT_PASSWORD_3": "Po prostu zapytaj nauczyciela lub lidera grupy, który pierwszy cię zapisał. Będą oni mogli zresetować Twoje hasło ze swojej strony administracyjnej."
    },
    "SIGNUP": {
        "TEACHER": {
            "TITLE": "Jesteś nauczycielem lub liderem klubu kodowania?",
            "INFO1": "Jeśli chcesz mieć dostęp dla swoich uczniów, załóż konto klasy poniżej.",
            "INFO2": "Istnieją dwa rodzaje kont klasowych - w zależności od tego, kto je zakłada."
        },
        "UNMANAGED": {
            "TITLE": "Załóż <strong>niezarządzane</strong> konto klasy.",
            "INTRO": "Jeśli jesteś zadowolony z założenia i zarządzania kontem klasy samodzielnie, możesz to zrobić teraz!",
            "LISTINTRO": "Będziesz musiał:",
            "LIST_CREATEACCOUNT": "Utwórz bezpłatne konto w chmurze IBM Cloud.",
            "LIST_CREATEAPIKEYS": "Tworzenie klucza (kluczy) API dla usług w chmurze Watsona potrzebnych do szkolenia modeli uczenia się maszyn.",
            "LIST_ENTERAPIKEYS": "Enter the API keys into this Machine Learning for Kids tool",
            "HELP": "Step-by-step instructions (with screenshots) are available for all of this."
        },
        "MANAGED": {
            "TITLE": "Create a <strong>managed</strong> class account",
            "INTRO": "If you would like Dale to set up the class account, use the button below to send an email with the following information:",
            "LIST_NUMBEROFSTUDENTS": "Roughly how many student accounts you will need",
            "LIST_NAMEOFSCHOOL": "The name of the school or coding group the account is for",
            "RESTRICTIONS": "This offer is only available to schools and not-for-profit student coding clubs.",
            "EMAIL": "Email"
        }
    },
    "PROJECTS": {
        "TITLE": "Your machine learning projects",
        "ADDNEWPROJECT": "Add a new project",
        "COPYTEMPLATE": "Copy template",
        "CREATEFIRSTPROJECT": "Click on the 'plus' button on the right to create your first project.",
        "RECOGNISING": "Recognising",
        "AS": "as",
        "SHARE": "Share",
        "UNSHARE": "Un-share",
        "WHOLE_CLASS_TITLE": "Crowd-sourced project",
        "WHOLE_CLASS_NOTES": "This is a whole-class project. All students in your class can use it and add to the training data."
    },
    "NEWPROJECT": {
        "TITLE": "Start a new machine learning project",
        "PROJECT_NAME": {
            "TITLE": "Project Name",
            "NOTES": "Give your project a name to describe what sort of thing you'll try to teach the computer to recognise."
        },
        "WHOLE_CLASS_PROJECT": {
            "TITLE": "Whole-class project?",
            "NOTES_1": "Tick this if you want your whole class to be able to work on this project together.",
            "NOTES_2": "This is useful for projects that teach crowd-sourcing as an approach to training machine learning projects."
        },
        "TYPES": {
            "LABEL": "Recognising",
            "NOTES_1": "What type of thing do you want to teach the computer to recognise?",
            "NOTES_2": "For words, sentences or paragraphs, choose \"text\"",
            "NOTES_3": "For photos, diagrams and pictures, choose \"images\"",
            "NOTES_4": "For sets of numbers or multiple choices, choose \"numbers\"",
            "NOTES_5": "For voices and sounds, choose \"sounds\""
        },
        "LANGUAGE": {
            "LABEL": "Language",
            "NOTES": "What language will the text in this project be?"
        },
        "FIELDS": {
            "TYPE": {
                "TITLE": "Type of value",
                "NUMBER": "number",
                "MULTIPLE_CHOICE": "multiple-choice"
            },
            "CHOICES": {
                "TITLE": "Choices:",
                "LABEL": "add a choice"
            },
            "NEWFIELD": {
                "DESCRIBE_FIELD": "Give this field a name to describe the value",
                "MULTICHOICE": "If it can be described as choosing from a few options, choose \"multiple-choice\".",
                "ADD_FIRST_FIELD": "Type in a choice to use in your multiple-choice list, then press Enter.",
                "ADD_ANOTHER_FIELD": "Type in another choice to use in your multiple-choice list, then press Enter."
            },
            "NEWVALUE": {
                "ADD_FIRST_VALUE": "Start to describe the values that you'll include with each example to train the computer with by clicking the 'Add a value' button.",
                "VALUES_LIMIT": "You are not allowed more than 10 values in a project."
            }
        },
        "CREATE": "Create",
        "ERRORS": {
            "REQUIRED": "This is required!",
            "TOOLONG": "That's too long!",
            "EXCEEDLIMIT": "You've reached the limit for the number of projects you can have. You need to delete one of your current projects before you can create another.",
            "TRYITNOW": "Sorry! You can only create one project at a time if you use 'Try it now'. You need to delete your current project before you can create another."
        },
        "WARNINGS": {
            "MLCRED-TEXT-NOKEYS": "Please let your teacher know that they will need to add a \"Watson Assistant API key\" to your class to let you train the machine learning model for your new project",
            "MLCRED-TEXT-INVALID": "There might be a problem with the IBM Cloud API keys you will need to train a machine learning model for your new project. Please ask your teacher to try verifying the \"Watson Assistant API keys\" in your class."
        }
    },
    "DATASETS": {
        "TITLE": "Copy a machine learning project template",
        "INTRO": {
            "INTRO_1": "You can create new machine learning project based on one of these templates.",
            "INTRO_2": "Each one includes a set of training data that has been collected for you to help you get started quickly. ",
            "INTRO_3": "You will be able to make changes to the training data if you like, or you can go straight to training a machine learning model with it. "
        },
        "IMPORT": "Import",
        "TESTING": "Do you want to use some of the data for testing?",
        "MORE": {
            "TITLE": "Other data sets",
            "SUMMARY": "What other data sets would you like to see?",
            "DESCRIPTION": "Have you got an idea for a data set you'd like to see available here? Or do you have a data set that you'd like to contribute? Please get in touch!",
            "MOREINFO": "More..."
        },
        "DATA": {
            "TITANIC": {
                "TITLE": "Titanic survivors",
                "SUMMARY": "Predict survival on the Titanic",
                "DESCRIPTION": "On 15th April 1912, the RMS Titanic hit an iceberg and sank, killing over 1500 of the passengers and crew. This project includes personal data about hundreds of the passengers. You can use this to train a machine learning model that, if you give it a description of a passenger, can learn to predict the likelihood that they would have survived. ",
                "DETAILS": "The 'ticket class' field is a number indicating the type of ticket for the passenger: first class (1), second class (2), or third class (3). \nThe 'gender' field is whether the passenger was 'male' or 'female'. \nThe 'age' field is the age of the passenger. \nThe 'sibl. sp.' is the number of brothers or sisters (siblings) the passenger had on board if they were a child, or the number of husbands or wives (spouses) the passenger had on board if they were an adult. \nThe 'par. ch.' field is the number of parents the passenger had on board if they were a child, or the number of children the passenger had on board if they were an adult. \nThe 'ticket fare' field is how much they paid for their ticket. \nThe 'embarked' field is where they got on board the Titanic, either Cherbourg, Queenstown or Southampton."
            },
            "CATSANDDOGS": {
                "TITLE": "Cats and Dogs",
                "SUMMARY": "Recognize photos of cats vs dogs",
                "DESCRIPTION": "Training a machine learning model to recognise photos of cats and dogs is a good simple introduction to image recognition.",
                "DETAILS": "This training dataset of photos from Wikimedia Commons is a good starting set for building your own training data of animal photos"
            },
            "UKNEWSPAPERS": {
                "TITLE": "UK Newspaper Headlines",
                "SUMMARY": "Recognize the use of language in newspaper headlines",
                "DESCRIPTION": "Different newspapers use language in different ways. This project includes the main front page headline from four UK newspapers. You can use this to train a machine learning model that can learn to predict the most likely newspaper that a new headline is probably from. ",
                "DETAILS": "This training dataset includes headlines from the Daily Mail, the Daily Telegraph, the Independent, and The Guardian"
            },
            "PHISHING": {
                "TITLE": "Phishing",
                "SUMMARY": "Predict if a link is a phishing link",
                "DESCRIPTION": "Phishing is when a website tries to trick you into giving up sensitive information, by sending you a link to a fake website disguised like a trustworthy one. You can use this to train a machine learning model that can predict if a web address is a real link, or a phishing link to a fake website.",
                "DETAILS": "This training dataset includes attributes of five hundred legitimate web addresses, and five hundred phishing links.\n\nThe 'address type' field is 'IP addr' if the link has a numeric IP address like '104.20.74.246' or 'DNS name' if the link has a name-based address like 'machinelearningforkids.co.uk'. \nThe 'url length' field groups the training addresses by how long they are. \nThe 'shortening' field is 'yes' if the web address uses a shortening service like TinyURL or bit.ly, or 'no' if it doesn't. \nThe 'includes @' field is 'yes' if the web address includes an @ symbol, or 'no' if it doesn't. \nThe 'port number' field is 'standard' if the web address uses a standard port number like 80 or 443, or 'non-std' if it uses something different. \nThe 'domain age' field groups addresses by how long ago the web address in the address was registered. \nThe 'redirects' field groups the training addresses by the number of times a web browser is sent to a different address before reaching a final page. \nThe 'domain reg' field is 'expiring' if the registration for the web address domain name expires within a year."
            },
            "NOUGHTSANDCROSSES": {
                "SUMMARY": "Learn how to play a game",
                "DESCRIPTION": "Train a machine learning model to play noughts and crosses, by collecting examples of moves that the computer can use to learn how to predict the best move to make next.",
                "DETAILS": "This is an empty template to help you collect your own training data. For instructions on how to use it, download 'Noughts and Crosses' from Worksheets"
            },
            "TOPTRUMPS": {
                "TITLE": "Kings & Queens Top Trumps",
                "SUMMARY": "Learn how to play a game",
                "DESCRIPTION": "Train a machine learning model to play a Top Trumps game based on English Kings and Queens, by collecting examples of moves that the computer can use to learn how to predict which value to choose.",
                "DETAILS": "This is an empty template to help you collect your own training data. For instructions on how to use it, download 'Top Trumps' from Worksheets."
            },
            "SONGLYRICS": {
                "TITLE": "Song lyrics",
                "SUMMARY": "Recognize types of songs",
                "DESCRIPTION": "Train a machine learning model to recognize the type of song based on it's lyrics",
                "DETAILS": "This training dataset includes 140 lines from song lyrics - half from children's songs and half from Top 40 songs. It is a good starting set for training a machine learning model to recognize different uses of language."
            },
            "HANDGESTURES": {
                "TITLE": "Hand gestures",
                "SUMMARY": "Recognize hand gestures from finger positions",
                "DESCRIPTION": "Train a machine learning model to recognize different hand gestures, by collecting examples of the positions of your fingers.",
                "DETAILS": "This is an empty template to help you collect your own training data. For instructions on how to use it, download 'Hand gestures' from Worksheets."
            },
            "POKEMONSTATS": {
                "TITLE": "Pokémon statistics",
                "SUMMARY": "Recognize Pokémon from their statistics",
                "DESCRIPTION": "Train a machine learning model to predict the type of a Pokémon based on a collection of statistics about hundreds of Pokémon. ",
                "DETAILS": "This training dataset includes attributes of a selection of Pokémon. \n\nThe 'height' field is the height of a Pokémon in metres. \nThe 'weight' field is the weight of a Pokémon in kilograms. \nThe 'attack' field is the attack strength of a level 100 Pokémon. \nThe 'defense' field is the defense strength of a level 100 Pokémon. \nThe 'speed' field is the speed rating of a level 100 Pokémon. \nThe 'HP' field is the hit point statistics for a Pokémon. \nThe 'capture rate' field is the catch rate for a Pokémon. Pokémon with higher catch rates are easier to capture than Pokémon with lower catch rates."
            },
            "POKEMONIMAGES": {
                "TITLE": "Pokémon images",
                "SUMMARY": "Recognize Pokémon from pictures",
                "DESCRIPTION": "Train a machine learning model to predict the type of a Pokémon based on a set of pictures of a hundred Pokémon. ",
                "DETAILS": "This training dataset includes images of a selection of Pokémon, grouped by their type. It is a good starting set for training a machine learning model to predict the type of a Pokémon from a picture."
            },
            "ARGO": {
                "TITLE": "Ocean data",
                "SUMMARY": "Predict the location from ocean sensor data",
                "DESCRIPTION": "Train a machine learning model to predict the location of ocean robots. ",
                "DETAILS": "Argo is an international program that collects information from inside the ocean using a fleet of robotic instruments that drift with the ocean currents and move up and down between the surface and a mid-water level. Each instrument (float) spends almost all its life below the surface.\n\nSome floats fail to report back their location data. Train a machine learning model to predict which ocean the float data is likely to have been collected from.\n\n\nAttribution / References:\nForget, Gaël, 2016, \"MITprof_mar2016_argo0910.nc\", ECCO version 4 release 2: in situ and estimated profile data (MITprof data sets), https://doi.org/10.7910/DVN/EE3C40/DQBDDA, Harvard Dataverse, V1\nForget, G., Campin, J.-M., Heimbach, P., Hill, C. N., Ponte, R. M., and Wunsch, C.: ECCO version 4: an integrated framework for non-linear inverse modeling and global ocean state estimation, Geosci. Model Dev., 8, 3071–3104, https://doi.org/10.5194/gmd-8-3071-2015, 2015.\n\nPrepared by Dani Jones, British Antartic Survey, NERC, UKRI"
            },
            "FAKENEWS": {
                "TITLE": "Fake news",
                "SUMMARY": "Recognize fake news",
                "DESCRIPTION": "Train a machine learning model to recognize the type of writing in fake news. ",
                "DETAILS": "False and misleading news is more common as people turn to social media to get their news. Use this dataset to create a machine learning model that can try to distinguish when news is real or fake.\n\n\nAttribution: \nhttps://www.uvic.ca/ecs/ece/isot/datasets/fake-news/\n\nAcknowledgements:\nAhmed H, Traore I, Saad S. \"Detecting opinion spams and fake news using text classification\", Journal of Security and Privacy, Volume 1, Issue 1, Wiley, January/February 2018.\nAhmed H, Traore I, Saad S. (2017) \"Detection of Online Fake News Using N-Gram Analysis and Machine Learning Techniques\". In: Traore I., Woungang I., Awad A. (eds) Intelligent, Secure, and Dependable Systems in Distributed and Cloud Environments. ISDDC 2017. Lecture Notes in Computer Science, vol 10618. Springer, Cham (pp. 127-138)."
            },
            "STARS": {
                "TITLE": "Star types",
                "SUMMARY": "Learn to classify the types of stars",
                "DESCRIPTION": "Train a machine learning model to predict the type of a star based on their attributes. ",
                "DETAILS": "Stellar classification is when astronomers classify a star based on their spectral characteristics. Use this dataset to train a simple machine learning model that can predict some types of stars.\n\nThe 'temperature' field is in degrees Kelvin.\nThe 'radius' field gives the size of the star relative to the Sun.\nThe 'brightness' field gives the luminosity of the star relative to the Sun.\nThe 'colour' field gives the observable colour of the star.\n\nAttribution: \nhttps://www.kaggle.com/datasets/brsdincer/star-type-classification"
            }
        }
    },
    "PROJECT": {
        "TRAIN": {
            "TITLE": "Train",
            "BODY": "Collect examples of what you want the computer to recognise"
        },
        "LEARNANDTEST": {
            "TITLE": "Learn &amp; Test",
            "BODY": "Use the examples to train the computer to recognise"
        },
        "MAKES": {
            "TITLE": "Make",
            "BODY": "Use the machine learning model you've trained to make a game or app, in Scratch or in Python",
            "BODY_SCRATCHONLY": "Use the machine learning model you've trained to make a game or app in Scratch"
        },
        "SCRATCH": {
            "TITLE": "Scratch",
            "BODY": "Use the machine learning model you've trained to make a game in Scratch"
        },
        "PYTHON": {
            "TITLE": "Python",
            "BODY": "Use the machine learning model you've trained in a Python program"
        },
        "APPINVENTOR": {
            "TITLE": "App Inventor",
            "BODY": "Make a mobile app that uses your machine learning model"
        },
        "SCRATCH3": {
            "TITLE": "Scratch 3",
            "BODY": "Use your machine learning model in new version of Scratch"
        }
    },
    "TRAINING": {
        "TITLE": "Training",
        "ADDLABEL": "Add new label",
        "CREATEFIRSTLABEL": "Click on the 'plus' button on the right to add your first bucket.",
        "CROWDSOURCEDEMPTY": "Refresh this page after your teacher has created the training buckets.",
        "ADDEXAMPLE": "Add example",
        "ADDURL": "www",
        "ADDWEBCAM": "webcam",
        "ADDDRAWING": "draw",
        "DRAGIMAGES": "Drag pictures from other browser windows and drop them here",
        "NEWLABEL": {
            "INTRO": "Enter new label to recognise",
            "ERROR": "Only use letters and numbers in labels"
        },
        "NEWEXAMPLE": {
            "INTRO": "Enter an example of ",
            "INTROURL": "Enter the URL of a picture that is an example of",
            "INTRODRAWING": "Draw a new example of",
            "INTROWEBCAM": "Add new example of",
            "ERROR": "You're not allowed to use tabs or newlines.",
            "REQUIRED": "You have to include values for all fields in an example",
            "PATTERNNUMBER": "This doesn't look like a number",
            "PATTERNURL": "This needs to be the web address of a picture",
            "WEBCAMFAIL": "Sorry! We weren't able to get a webcam to work for you.",
            "WEBCAMERROR": "The message we got from your web browser was:"
        },
        "BACKGROUNDNOISE": "Collecting examples of background noise will help the computer to learn to recognize your sounds"
    },
    "MODELS": {
        "TITLE": "Machine learning models",
        "TRAIN": "Train new machine learning model",
        "CANCEL": "Cancel training",
        "DELETE": "Delete this model",
        "TEST_CANVAS": "Draw something to test your model with",
        "TEST_WEBCAM": "Take a photo to test your model with",
        "WHATHAVEYOUDONE": {
            "TITLE": "What have you done?",
            "PLEASEWAIT": "This normally takes a few minutes, but can take a little longer if the training computer is very busy.",
            "FAIL": "Unfortunately, something went wrong.",
            "TRAINING": {
                "CROWDSOURCED": {
                    "TEXT": "Your class is training a machine learning model using the examples of text that you all collected.",
                    "IMAGES": "Your class is training a machine learning model using the examples of images that you all collected.",
                    "NUMBERS": "Your class is training a machine learning model using the examples of numbers that you all collected.",
                    "SOUNDS": "Your class is training a machine learning model using the examples of sounds that you all collected."
                },
                "INDIVIDUAL": {
                    "TEXT": "You've started training a machine learning model using the examples of text that you collected.",
                    "IMAGES": "You've started training a machine learning model using the examples of images that you collected.",
                    "NUMBERS": "You've started training a machine learning model using the examples of numbers that you collected.",
                    "SOUNDS": "You've started training a machine learning model using the examples of sounds that you collected."
                },
                "SINCE": "It's been training since"
            },
            "READY": {
                "CROWDSOURCED": {
                    "TEXT": "Your class has trained a machine learning model to recognise when text is ",
                    "IMAGES": "Your class has trained a machine learning model to recognise when images are ",
                    "NUMBERS": "Your class has trained a machine learning model to recognise when numbers are ",
                    "SOUNDS": "Your class has trained a machine learning model to recognise when sounds are "
                },
                "INDIVIDUAL": {
                    "TEXT": "You have trained a machine learning model to recognise when text is ",
                    "IMAGES": "You have trained a machine learning model to recognise when images are ",
                    "NUMBERS": "You have trained a machine learning model to recognise when numbers are ",
                    "SOUNDS": "You have trained a machine learning model to recognise when sounds are "
                },
                "CREATED": {
                    "TEACHER": "Your teacher created the model on ",
                    "YOU": "You created the model on "
                },
                "TRAINING": {
                    "CLASS": "Your class has collected: ",
                    "YOU": "You have collected: "
                }
            },
            "ERROR": {
                "CROWDSOURCED": {
                    "CLASS": {
                        "TEXT": "Your teacher tried training a machine learning model using the examples of text that your class collected.",
                        "IMAGES": "Your teacher tried training a machine learning model using the examples of images that your class collected.",
                        "NUMBERS": "Your teacher tried training a machine learning model using the examples of numbers that your class collected.",
                        "SOUNDS": "Your teacher tried training a machine learning model using the examples of sounds that your class collected."
                    },
                    "YOU": {
                        "TEXT": "You tried training a machine learning model using the examples of text that your class collected.",
                        "IMAGES": "You tried training a machine learning model using the examples of images that your class collected.",
                        "NUMBERS": "You tried training a machine learning model using the examples of numbers that your class collected.",
                        "SOUNDS": "You tried training a machine learning model using the examples of sounds that your class collected."
                    }
                },
                "INDIVIDUAL": {
                    "TEXT": "You tried training a machine learning model using the examples of text that you collected.",
                    "IMAGES": "You tried training a machine learning model using the examples of images that you collected.",
                    "NUMBERS": "You tried training a machine learning model using the examples of numbers that you collected.",
                    "SOUNDS": "You tried training a machine learning model using the examples of sounds that you collected."
                }
            },
            "IDLE": {
                "NOLABELS": {
                    "CROWDSOURCED": {
                        "TEXT": "Your class said you want to collect examples of text.",
                        "IMAGES": "Your class said you want to collect examples of images.",
                        "NUMBERS": "Your class said you want to collect examples of numbers.",
                        "SOUNDS": "Your class said you want to collect examples of sounds."
                    },
                    "INDIVIDUAL": {
                        "TEXT": "You've said you want to collect examples of text.",
                        "IMAGES": "You've said you want to collect examples of images.",
                        "NUMBERS": "You've said you want to collect examples of numbers.",
                        "SOUNDS": "You've said you want to collect examples of sounds."
                    }
                },
                "NODATA": {
                    "CROWDSOURCED": {
                        "TEXT": "Your class said that you want to collect examples of text for a computer to recognise when text is ",
                        "IMAGES": "Your class said that you want to collect examples of images for a computer to recognise when images are ",
                        "NUMBERS": "Your class said that you want to collect examples of numbers for a computer to recognise when numbers are ",
                        "SOUNDS": "Your class said that you want to collect examples of sounds for a computer to recognise when sounds are "
                    },
                    "INDIVIDUAL": {
                        "TEXT": "You said that you want to collect examples of text for a computer to recognise when text is ",
                        "IMAGES": "You said that you want to collect examples of images for a computer to recognise when images are ",
                        "NUMBERS": "You said that you want to collect examples of numbers for a computer to recognise when numbers are ",
                        "SOUNDS": "You said that you want to collect examples of sounds for a computer to recognise when sounds are "
                    }
                },
                "NOEXAMPLES": {
                    "CLASS": "So far, your class haven't collected any examples yet.",
                    "YOU": "So far, you haven't collected any examples yet."
                },
                "DATA": {
                    "CROWDSOURCED": {
                        "TEXT": "Your class has collected examples of text for a computer to use to recognise when text is ",
                        "IMAGES": "Your class has collected examples of images for a computer to use to recognise when images are ",
                        "NUMBERS": "Your class has collected examples of numbers for a computer to use to recognise when numbers are ",
                        "SOUNDS": "Your class has collected examples of sounds for a computer to use to recognise when sounds are "
                    },
                    "INDIVIDUAL": {
                        "TEXT": "You have collected examples of text for a computer to use to recognise when text is ",
                        "IMAGES": "You have collected examples of images for a computer to use to recognise when images are ",
                        "NUMBERS": "You have collected examples of numbers for a computer to use to recognise when numbers are ",
                        "SOUNDS": "You have collected examples of sounds for a computer to use to recognise when sounds are "
                    },
                    "COLLECTED": {
                        "CLASS": "They've collected: ",
                        "YOU": "You've collected: "
                    }
                }
            }
        },
        "WHATSNEXT": {
            "TITLE": "What's next?",
            "PLEASEWAIT": "You could wait for the machine learning model to finish being trained.",
            "OFFERQUIZ": "Or, you could try the machine learning quiz below, to check what you've learned.",
            "FAIL": "The error message from the training computer is shown below. If that makes sense to you, try and fix the problem. Otherwise, it might be worth trying again in case it was just a random error.",
            "IDLE": {
                "NOLABELS": "The next step is to go to the <a href='{{ urls.train }}'>Train</a> page. Add some labels for each of the things that you want to teach the computer to be able to recognise.",
                "ONELABEL": {
                    "EXPLANATION": "You've only said one thing that you want the computer to be able to recognise: {{ label }}",
                    "ISTHATALL": "Is that the only thing you want the computer to be able to recognise?",
                    "NO": "<strong>No?</strong><br/>Go back to the <a href='{{ urls.train }}'>Train</a> page.<br/>Add more labels for each of the things that you want to teach the computer to be able to recognise.<br/><br/>",
                    "YES": "<strong>Yes?</strong><br/>You need to do a little more work first.<br/>For the computer to be able to learn how to recognise \"{{ label }}\", you need to give it some examples of things that aren't {{ label }}.<br/>Go back to the <a href='{{ urls.train }}'>Train</a> page and create a new label for examples of things that aren't {{ label }}. You could call it \"not-{{ label }}\"."
                },
                "LABELS": {
                    "NO_DATA": "The next step is to go to the <a href='{{ urls.train }}'>Train</a> page. Add examples for each of the labels.",
                    "MORE_DATA": {
                        "KEEP_GOING": "Keep going!",
                        "MORE_EXAMPLES": {
                            "YOU": "Go back to the <a href='{{ urls.train }}'>Train</a> page and collect more examples for each of the labels.",
                            "CLASS": "Ask your class to go back to the <a href='{{ urls.train }}'>Train</a> page and collect more examples for each of the labels."
                        },
                        "MORE_IS_BETTER": "The more you can get, the better it should learn, but you need at least {{ minimumExamples }} examples of each as an absolute minimum."
                    },
                    "ENOUGH_DATA": {
                        "READY_TO_START": "Ready to start the computer's training?",
                        "START_TRAINING": {
                            "CROWDSOURCED": "Click the button below to start training a machine learning model using the examples your class have collected so far",
                            "INDIVIDUAL": "Click the button below to start training a machine learning model using the examples you have collected so far"
                        },
                        "MORE_EXAMPLES": {
                            "CROWDSOURCED": "(Or ask your class to go back to the <a href='{{ urls.train }}'>Train</a> page if you want them to collect more examples first.)",
                            "INDIVIDUAL": "(Or go back to the <a href='{{ urls.train }}'>Train</a> page if you want to collect some more examples first.)"
                        },
                        "WAITING_FOR_TEACHER": "Waiting for your teacher to start the computer's training."
                    }
                }
            },
            "READY": {
                "TEST": {
                    "TEXT": "Try testing the machine learning model below. Enter an example of text below, that you didn't include in the examples you used to train it. It will tell you what it recognises it as, and how confident it is in that.",
                    "IMAGES": "Try testing the machine learning model below. Enter an example image below, that you didn't include in the examples you used to train it. It will tell you what it recognises it as, and how confident it is in that.",
                    "NUMBERS": "Try testing the machine learning model below. Enter an example of numbers below, that you didn't include in the examples you used to train it. It will tell you what it recognises it as, and how confident it is in that.",
                    "SOUNDS": "Try testing the machine learning model below. Click the 'Start listening' button. If your machine learning model recognises any sounds, it will tell you what it recognises it as, and how confident it is in that."
                },
                "SCRATCH": "If the computer seems to have learned to recognise things correctly, then you can go to Scratch and use what the computer has learned to make a game!",
                "ADDITIONAL_TRAINING": {
                    "MORE_EXAMPLES": {
                        "CROWDSOURCED": "If the computer is getting too many things wrong, your class might want to go back to the <a href='{{ urls.train }}'>Train</a> page and collect some more examples.",
                        "INDIVIDUAL": "If the computer is getting too many things wrong, you might want to go back to the <a href='{{ urls.train }}'>Train</a> page and collect some more examples"
                    },
                    "RETRAIN": {
                        "YOU": "Once you've done that, click on the button below to train a new machine learning model and see what difference the extra examples will make!",
                        "CLASS": "Once you've done that, your teacher will need to train a new machine learning model."
                    }
                }
            }
        },
        "TRAINING": {
            "TITLE": "Info from training computer:",
            "STARTED": "Model started training at:",
            "STATUS": "Current model status:",
            "DETAIL": "Detail:",
            "DELETION": "Model will automatically be deleted after:",
            "LASTCHECK": "Model last checked:",
            "PROMPTREFRESH": "If this is more than a minute, you should refresh the page to get an up-to-date status"
        },
        "TESTING": {
            "INTRO": {
                "TEXT": "Try putting in some text to see how it is recognised based on your training.",
                "IMAGES": "Try putting in an image to see how it is recognised based on your training.",
                "NUMBERS": "Try putting in some numbers to see how it is recognised based on your training.",
                "SOUNDS": "Try making a sound to see how it is recognised based on your training"
            },
            "WEBCAM": "Test with <strong>webcam</strong>",
            "DRAWING": "Test by <strong>drawing</strong>",
            "WWW": "Test with <strong>www</strong>",
            "RECOGNISED": "Recognised as  <strong>{{ testoutput }}</strong>",
            "STARTLISTENING": "Start listening",
            "STOPLISTENING": "Stop listening"
        },
        "TESTDATA": {
            "TITLE": "Test data:",
            "EXPLANATION": "You kept some of the data from the project template out of the training set, so that it can be used for testing. Click the button below to download a CSV file.",
            "DOWNLOAD": "Download test data"
        },
        "QUIZ": {
            "TITLE": "Quiz time!",
            "INTROQUESTION": "While you are waiting for the model to finish training, try answering this question.",
            "PREVIOUSLY_ATTEMPTED": "You've seen this one before - let's see if you remember what the right answer is this time!",
            "CORRECT_ANSWER": "That's right!",
            "INCORRECT_ANSWER": "No, sorry. The correct answer is shown above.",
            "NEXT_QUESTION": "Next question",
            "QUESTION_1": {
                "QUESTION": "In general, what will help machines to learn better?",
                "ANSWER_1": "More examples",
                "ANSWER_2": "Fewer examples",
                "NOTES_1": "That isn't the only thing that has an effect. But in general, the more examples it has to learn from, the better it should learn."
            },
            "QUESTION_2": {
                "QUESTION": "Which of these would probably be best for training a computer to recognise a photo of an apple?",
                "ANSWER_1": "Photos of dogs",
                "ANSWER_2": "Varied photos of different types of apples in different places",
                "ANSWER_3": "Identical photos of an apple",
                "ANSWER_4": "Very, very similar photos of the same apple in the same place",
                "NOTES_1": "The more varied the examples you can collect, the more the system can learn about how to recognise different pictures of an apple.",
                "NOTES_2": "If every example you give it is the same apple on the same brown wooden table, it might learn that something is only an apple if it's on a brown wooden table."
            },
            "QUESTION_3": {
                "QUESTION": "Which of these would be a good use of machine learning?",
                "ANSWER_1": "Adding big numbers together",
                "ANSWER_2": "Recognising if an email is spam",
                "ANSWER_3": "Counting the number of times a button is pressed",
                "NOTES_1": "Spam filters are a good example of machine learning.",
                "NOTES_2": "With enough examples of legitimate emails, and enough examples of spam emails, a computer can start to learn how to recognise a spam email."
            },
            "QUESTION_4": {
                "QUESTION": "Which of these is NOT a good use of machine learning?",
                "ANSWER_1": "Sentiment analysis - recognising the mood, tone or emotion in text",
                "ANSWER_2": "Translating text from one language to another",
                "ANSWER_3": "Face recognition - recognising a face in a photo and identifying who it is",
                "ANSWER_4": "Self-driving cars",
                "ANSWER_5": "Calculating the cost of something in different countries based on exchange rates",
                "ANSWER_6": "Recommending a movie based on films you've watched before",
                "NOTES_1": "Tasks that involve following rules which can be worked out are not a good use for machine learning.",
                "NOTES_2": "A computer isn't going to learn how to apply an exchange rate from examples - we can just tell it what to do."
            },
            "QUESTION_5": {
                "QUESTION": "Which of these would be more likely to be successful?",
                "ANSWER_1": "Collect a small set of examples, train a system, test to see how good it is. Add more examples, train again, and then test again. Repeat until it gets good enough.",
                "ANSWER_2": "More examples is better, so decide you must need millions of examples. Start collecting a massive set of examples, and spend months collecting more and more and more.",
                "NOTES_1": "More examples is generally better, but be practical.",
                "NOTES_2": "Pragmatism is important. Regular testing is useful to let you know how things are going, and help you know when you've done enough.",
                "NOTES_3": "When you've only got ten examples, another ten examples will probably make a huge difference.",
                "NOTES_4": "When you've got 100,000 examples, another ten examples probably won't have a noticeable impact."
            },
            "QUESTION_6": {
                "QUESTION": "Which of these statements is correct?",
                "ANSWER_1": "Machine learning is a technique where computers can be trained to perform tasks instead of needing to be given an explicit set of steps to follow",
                "ANSWER_2": "Machine learning is magic",
                "ANSWER_3": "Machine learning means we don't need to think about problems any more because computers will think for us",
                "ANSWER_4": "Machine learning has replaced the need for us to learn how to code",
                "ANSWER_5": "Machine learning can only be done on massive supercomputers"
            },
            "QUESTION_7": {
                "QUESTION": "A machine learning system trained to recognise pictures with a tree in should be good at which of the following tasks:",
                "ANSWER_1": "Identifying pictures of fruit",
                "ANSWER_2": "Recognising the emotion in a piece of writing",
                "ANSWER_3": "Recognising pictures of trees",
                "NOTES_1": "Machine learning does not mean computers magically learn to do everything.",
                "NOTES_2": "It means they learn how to do a specific task by being shown examples of that specific task.",
                "NOTES_3": "If you want it to do something else, you need to train it to do that as well, by giving it examples of that."
            },
            "QUESTION_8": {
                "QUESTION": "Alice and Bob both want to train a machine learning system to recognise if text is happy/positive or sad/negative. Which of them will probably train the best system?",
                "ANSWER_1": "Alice. She has collected 10 varied examples of happy text, and 10 varied examples of sad text",
                "ANSWER_2": "Bob. He has collected 1000 examples of happy writing and 10 examples of sad writing",
                "NOTES_1": "Collecting a roughly similar number of examples for each label is a useful technique.",
                "NOTES_2": "If nearly every example of writing you train a system with is happy, you might end up training the system to assume that sad writing is very unlikely, and that it should assume happy more often.",
                "NOTES_4": "But, you might want it to do this.",
                "NOTES_5": "If you're training a system to recognise text where text is happy 98% of the time, training it with that realistic experience might be worth a try."
            },
            "QUESTION_9": {
                "QUESTION": "Advanced machine learning technology will always give correct answers. Incorrect answers mean the machine learning technology isn't very good",
                "ANSWER_1": "True",
                "ANSWER_2": "False",
                "NOTES_1": "Not necessarily.",
                "NOTES_3": "The technology and algorithms are important. BUT machine learning systems are only as accurate and reliable as the training they are given.",
                "NOTES_4": "Simple machine learning algorithms with a lot of high quality training can do better than the most advanced machine learning algorithms with a small amount of poor quality training."
            },
            "QUESTION_10": {
                "QUESTION": "How can you make sure your collection of animal pictures is good quality for training a machine and doesn't contain human mistakes?",
                "ANSWER_1": "Manually inspect all of the pictures of animals yourself and make sure you agree with all of the labels",
                "ANSWER_2": "Ask lots of people to label all the images and keep the training labels that people generally agree on",
                "ANSWER_3": "Trick question! Humans are always right - machines make mistakes!",
                "NOTES_1": "Even humans make mistakes and you won't always have time to double check all the training data!",
                "NOTES_2": "If the task is tricky it can be a good idea to get more than one person to label each image and keep the label that the most humans agree is the right one."
            },
            "QUESTION_11": {
                "QUESTION": "A machine trained to identify pictures of \"food\" or \"not food\" gives inconsistent results for sandwiches, often putting them in the \"not food\" class. Which of the following could explain that?",
                "ANSWER_1": "The human who trained the system doesn't like sandwiches and didn't put any in the training data",
                "ANSWER_2": "The machine has to be in the right mood for a sandwich so it changes its mind a lot",
                "ANSWER_3": "Sandwiches are not food. The system is right to be unsure",
                "NOTES_1": "Machine learning models can only learn from the examples we show them.",
                "NOTES_2": "It is very easy for humans to accidentally introduce their likes and dislikes into machine learning models so we should be very careful about what training data we use."
            },
            "QUESTION_12": {
                "QUESTION": "Which of the following best describes unsupervised learning?",
                "ANSWER_1": "Writing a program that contains lots of if/else statements to determine the result",
                "ANSWER_2": "A machine learning algorithm that uses unlabelled data and classifies it based on how similar one dataset is to another",
                "ANSWER_3": "A machine learning algorithm that uses labelled data and classifies it based on training from example input-output pairs",
                "NOTES_1": "Unsupervised learning is a type of machine learning, whereas only using if/else statements is not.",
                "NOTES_2": "Unsupervised learning algorithms are still trained, but the inputs that are given to it are not labelled or classified.",
                "NOTES_3": "If the data is labelled then this is what's known as supervised learning."
            },
            "QUESTION_13": {
                "QUESTION": "Without machine learning, it would be impossible for search engines such as Google to exist.",
                "ANSWER_1": "True",
                "ANSWER_2": "False",
                "NOTES_1": "Whilst many modern search engines do use machine learning, it is possible to create one without it. A basic search engine will just look for documents (web pages) that include the words the user searches for."
            }
        }
    },
    "DESCRIBEMODEL": {
        "TITLE": "Understand your machine learning model",
        "TRYITOUT": "Try out your machine learning model to see how it uses the decision tree to make predictions",
        "EXPLANATION": {
            "EXPL_1": "The technique used to create your machine learning model is called a <a target='_blank' href='https://wikipedia.org/wiki/Decision_tree_learning'>Decision Tree Classifier</a>.",
            "EXPL_2": "This is not the only way to train a machine learning model. We're using it because it's very quick and easy to train, and it is one of the easiest techniques to understand. This page shows you the decision tree that was created based on the training examples that you have collected.",
            "EXPL_3": "When you test your model, the computer starts at the top of the tree, and follows a path until it reaches the bottom. The <strong>class</strong> at the bottom of the tree is the prediction that the machine learning model makes.",
            "EXPL_4": "At each box in the tree, it reads the test described at the top of the box. If your test values pass the test described in the box, it follows the arrow to the left. If it doesn't pass the test, it follows the arrow to the right.",
            "EXPL_5": "The <strong>samples</strong> shown in each box tells you how many examples in your training data matches that part of the decision tree.",
            "EXPL_6": "The <strong>value</strong> shown in each box tells you how many examples in your training data passed the test shown at the top (following the left arrow) and how many examples didn't pass the test at the top (following the right arrow)."
        },
        "ERRORS": {
            "NUMBERSONLY": "Only machine learning models for numbers projects can be described"
        }
    },
    "DESCRIBETEXTMODEL": {
        "ZOOM": "Use these controls to zoom in on the diagrams",
        "ERRORS": {
            "TEXTONLY": "Only neural networks for text projects can be described"
        },
        "MOREINFO": "for more detail, try searching for:",
        "PAGE1": {
            "TITLE": "neural networks",
            "TEXT1": "The type of machine learning model you trained in this project is called a <em>neural network</em>.",
            "TEXT2": "The next few pages will explain how your model was created.",
            "TEXT3": "These diagrams aren't an exact description of your model. Your model is larger and more complicated, but these diagrams are easier to explain."
        },
        "PAGE2": {
            "TITLE": "deep learning",
            "TEXT1": "The model is made of <em>nodes</em>, arranged in vertical <em>layers</em>.",
            "TEXT2": "Models with a lot of layers are described as <em>deep</em>.",
            "TEXT3": "Deep models can give better results, but take longer to train."
        },
        "PAGE3": {
            "TITLE": "input layer",
            "TEXT1": "Let's start with one of the training examples used to create your model.",
            "TEXT2": "Your training example is shown as <em>input</em> on the left."
        },
        "PAGE4": {
            "TITLE": "encoding",
            "TEXT1": "To use your training example to train the model, first the text needs to be turned into a series of numbers.",
            "TEXT2": "There are lots of ways to do this.",
            "TEXT3": "If you build your own machine learning model, you need to choose a way that works well for your particular project."
        },
        "PAGE5": {
            "TITLE": "bag of words",
            "TEXT1": "One way of turning your text into numbers is to make each number a count of how many times a word is included."
        },
        "PAGE6": {
            "TITLE": "feature extraction",
            "TEXT1": "There are other things you can count. Things that are helpful to count depend on the project you are doing, and what you want your model to learn to recognize patterns in.",
            "TEXT2": "Counting things is quick and simple, but not as good for projects where the order of words is important."
        },
        "PAGE7": {
            "TITLE": "word embeddings",
            "TEXT1": "If you build your own machine learning model, you need to choose the method for turning text into numbers.",
            "TEXT2": "Your model used a more complicated technique that does include the order of words in the text."
        },
        "PAGE8": {
            "TITLE": "hidden layer",
            "TEXT1": "The numbers from the input layer go into sums that calculate values for the nodes in the next layer.",
            "TEXT2": "The lines on the diagram show which input values are used to calculate which values in the next layer."
        },
        "PAGE9": {
            "TITLE": "activation functions",
            "TEXT1": "There are lots of different types of calculation you can use. Not every node in the model has to use the same calculation.",
            "TEXT2": "If you build your own machine learning model, you need to choose which equations to use for each node.",
            "TEXT3": "The functions to use for each node in your model were chosen for you."
        },
        "PAGE10": {
            "TITLE": "weight",
            "TEXT1": "Each line in the diagram has a <em>weight</em> number that can be used in the sum.",
            "TEXT2": "Training the model is how we work out the best number to put on each line, as you'll see in a moment."
        },
        "PAGE11": {
            "TITLE": "bias",
            "TEXT1": "Each node in the diagram has a <em>bias</em> number that is used in the sum as well.",
            "TEXT2": "Training the model is also how we work out the right bias number, as you'll see in a moment.",
            "TEXT3": "Try to work out what you think the value for this node will be."
        },
        "PAGE12": {
            "TITLE": "activation functions",
            "TEXT1": "This is a common <em>function</em> used in neural networks.",
            "TEXT2": "Each input value is multiplied by the value for the line that connected it. These are all added together. Then added to the value for the node itself."
        },
        "PAGE13": {
            "TITLE": "activation functions",
            "TEXT1": "Each node has its own <em>bias</em> value.",
            "TEXT2": "Each line has its own <em>weight</em> value."
        },
        "PAGE14": {
            "TITLE": "hidden layers",
            "TEXT1": "Each node in the model can use different equations.",
            "TEXT2": "If you build your own machine learning model, you need to choose:",
            "LIST1": "how many layers to have",
            "LIST2": "how many nodes to put in each layer",
            "LIST3": "which functions to use for each node"
        },
        "PAGE15": {
            "TITLE": "hidden layer",
            "TEXT1": "This continues through the rest of the model.",
            "TEXT2": "The number of layers, the number of nodes in each layer, and the functions to use for each node in your model were all chosen for you."
        },
        "PAGE16": {
            "TITLE": "output layer",
            "TEXT1": "The final layer gives the machine learning model's prediction.",
            "TEXT2": "There is a node for each bucket you added to your training data."
        },
        "PAGE17": {
            "TITLE": "loss function",
            "TEXT1": "The prediction is compared with the correct answer (the training bucket you put this example in).",
            "TEXT2": "The difference is described as the <em>error rate</em>, and tells us how well the machine learning model is doing at this stage of the training."
        },
        "PAGE18": {
            "TITLE": "back propagation",
            "TEXT1": "The <em>error rate</em> is used to go backwards through the layers and nudge the numbers for each of the lines and nodes.",
            "TEXT2": "Each weight and bias number is increased a little bit or decreased a little bit, depending on what would've made the error rate a little smaller."
        },
        "PAGE19": {
            "TITLE": "neural networks",
            "TEXT1": "Next, this is all done over again, with another of your training examples."
        },
        "PAGE20": {
            "TITLE": "encoding",
            "TEXT1": "Remember, the first step is turning the example text into numbers.",
            "TEXT2": "Counting things that are in the text is an easy way to do it, but there are more complicated ways to do it if the order of words is important.",
            "TEXT3": "The method for your model was chosen for you."
        },
        "PAGE21": {
            "TITLE": "hidden layer",
            "TEXT1": "Remember, nodes in the middle of the model represent sums that are done using the input numbers.",
            "TEXT2": "Different calculations can be chosen for each node."
        },
        "PAGE22": {
            "TITLE": "activation functions",
            "TEXT1": "Remember, the calculations use numbers from the nodes on the left that are connected to it, as well as the numbers for the lines that connect them."
        },
        "PAGE23": {
            "TITLE": "activation functions",
            "TEXT1": "The calculations also use a <em>bias</em> number for the node itself."
        },
        "PAGE24": {
            "TITLE": "hidden layer",
            "TEXT1": "This continues through the rest of the model.",
            "TEXT2": "The functions to use for each node in your model were chosen for you."
        },
        "PAGE25": {
            "TITLE": "output layer",
            "TEXT1": "Remember, the <em>output layer</em> gives the machine learning model's prediction.",
            "TEXT2": "Each node gives you the prediction for one of the buckets that you added to your training data."
        },
        "PAGE26": {
            "TITLE": "loss function",
            "TEXT1": "Remember, results from the <em>output layer</em> are compared with the correct answer, which shows how well the machine learning model is doing."
        },
        "PAGE27": {
            "TITLE": "back propagation",
            "TEXT1": "Remember that the <em>error rate</em> is used to go backwards through the layers and nudge the numbers associated with each of the lines and nodes.",
            "TEXT2": "Each <em>weight</em> and <em>bias</em> number is increased a little bit or decreased a little bit, depending on what would've made the error a little smaller.",
            "TEXT3": "This is how training works out the best numbers to use for each of the nodes and lines."
        },
        "PAGE28": {
            "TITLE": "epochs",
            "TEXT1": "One run-through of every training example you collected through the model is called an <em>epoch</em>.",
            "TEXT2": "Each time through, the weights for each node are nudged a little more, until hopefully the error rate for predictions are as low as they can be.",
            "TEXT3": "If you build your own machine learning model, you need to choose how many epochs you want to run."
        },
        "PAGE29": {
            "TITLE": "neural networks",
            "TEXT1": "I hope this simplified description gives you an idea what happens when you click on the \"Train new machine learning model\" button.",
            "TEXT2": "For an explanation of why this process works, try watching \"<a href='https://youtu.be/R9OHn5ZF4Uo'>How Machines Learn</a>\" by CGP Grey."
        }
    },
    "MAKES": {
        "TITLE": "Make something with your machine learning model",
        "SCRATCH3": "Use your machine learning model in Scratch",
        "PYTHON": "Write Python code to use your machine learning model",
        "APPINVENTOR": "Make a mobile app for your phone or tablet"
    },
    "PYTHON": {
        "TITLE": "Using machine learning in Python",
        "NOTREADY": "Your project isn't ready to be used in Python yet.",
        "NOMODEL": "You haven't trained a machine learning model yet.",
        "NOSOUND": "Python cannot be used with sounds projects.",
        "LAUNCH": "Run Python in the browser",
        "LOCAL": "Copy code to run on your computer",
        "REPLIT": {
            "TITLE": "Coding in replit",
            "TIP": "Tip: You have to click on <span class='pythonreplhighlight'>Fork repl</span> to start editing your own copy of the code",
            "GO": "Go to replit.com"
        },
        "MODE": {
            "INTRO": "Where would you like to write and run your Python code?",
            "BROWSER": "You can do everything in the web browser, which means you don't need to worry about installing or setting up Python, or any of the third-party Python modules you will need.",
            "LOCAL": "Or you can copy the code to run on your own computer. This is useful if there are local files, or devices like a webcam or speaker, that you want to use in your Python program."
        },
        "APIKEY_INSTRUCTION": "You need to <span class='strongemphasis'>add your API key</span> to the project. Do that on line 6 of the template.",
        "APIKEY_WARNING": "Treat this code like a password and make sure that you keep it secret!",
        "REPLACE_THIS": "Replace this:",
        "WITH_THIS": "with this:",
        "UNCOMMENT": "You will need to remove a comment # character in the template to use the function.",
        "RECOGNIZE": {
            "INSTRUCTION": "Try updating the example on line 28 of the template.",
            "TEXT": {
                "INTRO": "If you want to use your machine learning model to <span class='strongemphasis'>recognize text</span>, you can use the <code>classifyText</code> function.",
                "REPLACE": "Update this with the text you want your machine learning model to recognize:"
            },
            "IMAGES": {
                "INTRO": "If you want to use your machine learning model to <span class='strongemphasis'>recognize images</span>, you can use the <code>classifyImages</code> function.",
                "REPLACE": "Update this with the web address for a picture you want your machine learning model to recognize:"
            },
            "NUMBERS": {
                "INTRO": "If you want to use your machine learning model to <span class='strongemphasis'>recognize numbers</span>, you can use the <code>classifyNumbers</code> function."
            }
        },
        "STORE": {
            "ADD": "Data you want to add:",
            "INSTRUCTION": "Try updating the example on line 45 of the template.",
            "TEXT": {
                "INTRO": "If you want to <span class='strongemphasis'>add training examples</span> to your machine learning project, you can use the <code>storeText</code> function."
            },
            "NUMBERS": {
                "INTRO": "If you want to <span class='strongemphasis'>add training examples</span> to your machine learning project, you can use the <code>storeNumbers</code> function."
            }
        }
    },
    "APPINVENTOR": {
        "TITLE": "Using machine learning in App Inventor",
        "LAUNCH_APPINVENTOR_BY_ITSELF": "(You can use <a href='{{ url }}' class='btn btn-default' target='_blank'>App Inventor by itself</a> if you want.)",
        "NOTREADY": "Your project isn't ready to be used in App Inventor yet.",
        "NOMODEL": "You haven't trained a machine learning model yet.",
        "LAUNCH": "Open App Inventor"
    },
    "SCRATCH": {
        "TITLE": "Using machine learning in Scratch",
        "NOTREADY": "Your project isn't ready to be used in Scratch yet.",
        "NOMODEL": "You haven't trained a machine learning model yet.",
        "LAUNCH": "Open in Scratch",
        "LAUNCH_SCRATCH_BY_ITSELF": "(You can use <a href='{{ url }}' class='btn btn-default' target='_blank'>Scratch by itself</a> if you want.)",
        "GO_TO_LEARNANDTEST": "Or go to the <a href='{{ urls.learnandtest }}'>Learn &amp; Test</a> page for some tips on what to do next.",
        "MORE_BLOCKS": "Your project will add these blocks to the <span style='background-color: purple; color: white; padding-left: 7px; padding-right: 7px; white-space: nowrap;'>More Blocks</span> tab in Scripts.",
        "MORE_BLOCKS_3": "Your project will add these blocks to Scratch.",
        "EXPLAIN_RECOGNISE_LABEL": "Put {{ type }} in the input for this, and it will return the label that your machine learning model recognises it as.",
        "EXPLAIN_RECOGNISE_CONFIDENCE": "This will return how confident your machine learning model is that it recognises the type of {{ type }}. (As a number from 0 - 100).",
        "EXPLAIN_LABELS": "These blocks represent the labels you've created in your project, so you can use their names in your scripts.",
        "EXPLAIN_COSTUMEIMAGE": "This block is in the Looks palette for Sprites and will return the image of the currently selected costume.",
        "EXPLAIN_ADD_TRAINING": "Use this to add a new example to your training data. (Training data has an effect after you train a machine learning model with it)",
        "EXPLAIN_TRAIN_MODEL": "Use this to train a new machine learning model",
        "EXPLAIN_IS_MODEL_READY": "The machine learning model will take a minute before it's ready for use. You can use these blocks to wait until it is ready.",
        "SAMPLE_SCRIPT": "This means you can do something like this:",
        "SAMPLE_SCREENSHOT": "It will look something like this - except with the name of your project.",
        "EXPLAIN_STATUS": "The coloured circle next to your project name tells you if your machine learning model is okay.",
        "STATUS_GREEN": "means your model is trained and ready to go",
        "STATUS_YELLOW": "means your model hasn't finished training yet",
        "STATUS_RED": "means something went wrong. Go back to the <a href='{{ urls.learnandtest }}'>Learn &amp; Test</a> page to see what went wrong with training."
    },
    "SCRATCH3": {
        "TITLE": "Using machine learning in Scratch 3",
        "LAUNCH": "Open in Scratch 3"
    },
    "WORKSHEETS": {
        "TITLE": "Machine learning projects",
        "INTRO_1": "These projects are downloadable step-by-step guides, with explanations and colour screenshots for students to follow.",
        "INTRO_2": "Each project is a stand-alone activity, written to last for a single lesson, and will guide children to create a game or interactive project that demonstrates a real-world use of artificial intelligence and machine learning.",
        "INTRO_3": "Suggestions for new worksheets, suggestions of improvements to any of the worksheets, or contributions of new project worksheets, are all very welcome.",
        "INTRO_4": "Examples of how to use these worksheets, and a suggested order for using these with a class, can be found in the <a href='/stories'>stories about what students learn</a>.",
        "TYPES": {
            "TITLE": "Recognising:",
            "ALL": "All project types",
            "PREFIX": "Train a computer to recognise ",
            "TEXT": "text",
            "IMAGES": "images",
            "NUMBERS": "numbers",
            "SOUNDS": "sounds",
            "FACES": "faces"
        },
        "LEVELS": {
            "TITLE": "Difficulty:",
            "ALL": "All difficulties",
            "BEGINNER": "Beginner projects",
            "INTERMEDIATE": "Intermediate projects",
            "ADVANCED": "Advanced projects"
        },
        "DOWNLOAD": "Download",
        "DOWNLOADS": {
            "AUDIENCE": {
                "TEACHERS": "For teachers:",
                "STUDENTS": "For students:"
            },
            "GUIDANCE": {
                "TITLE": "Download guidance for teachers",
                "DETAIL": "This sheet contains information for teachers or coding group leaders to help them prepare, setup and supervise this project.",
                "NOTES": "Notes:"
            },
            "WORKSHEET": {
                "TITLE": "Download project worksheet",
                "AUTHOR": "Worksheet provided by:"
            },
            "RESOURCES": {
                "TITLE": "Additional project resources",
                "DETAIL": "You will also need to provide students with a printed copy of this file."
            }
        },
        "MAKETYPES": {
            "ALL": "All make types",
            "SCRATCH": "Scratch projects",
            "PYTHON": "Python projects",
            "APPINVENTOR": "App Inventor projects",
            "SCRATCH_WORKSHEET": "Worksheet for making project in Scratch",
            "PYTHON_WORKSHEET": "Worksheet for making project in Python",
            "APPINVENTOR_WORKSHEET": "Worksheet for making project in App Inventor"
        },
        "NO_WORKSHEETS": {
            "NO_MATCHES": "There aren't any project worksheets that match those filters.",
            "MAKE_YOUR_OWN": "You could adapt some of the existing worksheets or come up with a new one.",
            "CONTRIBUTE": "If you do, please consider <a href='https://github.com/IBM/taxinomitis-docs/blob/master/README.md#contributions'>contributing it for others to use</a>."
        },
        "DESCRIBETHEGLASS": {
            "TITLE": "Describe the glass",
            "SUMMARY": "Teach a computer to predict your answers",
            "DESCRIPTION": "Create a game in Scratch that learns when you describe a glass as half-full or half-empty.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-describetheglass.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-describetheglass.pdf"
        },
        "SMARTCLASSROOM": {
            "TITLE": "Smart Classroom",
            "SUMMARY": "Teach a computer to recognise the meaning of your commands",
            "DESCRIPTION": "Create a smart assistant in Scratch that lets you control virtual devices.",
            "WORKSHEET_1": {
                "DESCRIPTION": "Full version of the project, where the students make a non-machine learning version first",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-smartclassroom.pdf"
            },
            "WORKSHEET_2": {
                "DESCRIPTION": "Shorter version of the project, where the students only make a machine learning version of the assistant",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-smartclassroom-easy.pdf"
            },
            "WORKSHEET_3": {
                "DESCRIPTION": "Quick simplified version of the project, ideal for use as a first introduction to the tool",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-smartclassroom-tryitnow.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-smartclassroom.pdf"
        },
        "MAKEMEHAPPY": {
            "TITLE": "Make me happy",
            "SUMMARY": "Teach a computer to recognise compliments and insults",
            "DESCRIPTION": "Create a character in Scratch that smiles if you say nice things to it and cries if you say mean things to it.",
            "WORKSHEET_1": {
                "DESCRIPTION": "Full version of the project, where the students make a non-machine learning version first",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-makemehappy.pdf"
            },
            "WORKSHEET_2": {
                "DESCRIPTION": "Shorter version of the project, where the students only make a machine learning version",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-makemehappy-easy.pdf"
            },
            "WORKSHEET_3": {
                "DESCRIPTION": "Python project - for making the project using Python",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-makemehappy-python.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-makemehappy.pdf"
        },
        "SNAP": {
            "TITLE": "Snap!",
            "SUMMARY": "Teach a computer to recognise what icons look like",
            "DESCRIPTION": "Make a card game in Scratch that learns to recognise pictures of your card.",
            "WORKSHEET_1": {
                "DESCRIPTION": "Full version of the project, where the students make their own cards that they will train the computer to recognise",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-snap.pdf"
            },
            "WORKSHEET_2": {
                "DESCRIPTION": "Shorter version of the project, providing children with pre-made cards that you will need to print out, to save the students time having to make them",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-snap-easy.pdf",
                "RESOURCES": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/resources-snap-easy.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-snap.pdf"
        },
        "CHAMELEON": {
            "TITLE": "Chameleon",
            "SUMMARY": "Teach a computer to recognise colours",
            "DESCRIPTION": "Make a chameleon in Scratch that changes colour to match its background",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-chameleon.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-chameleon.pdf"
        },
        "QUIZSHOW": {
            "TITLE": "Quiz Show",
            "SUMMARY": "Make a game show player that can answer questions on a topic of your choice",
            "DESCRIPTION": "Use a computer that has been trained to find answers to questions in documents.",
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-quizshow.pdf",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-quizshow.pdf"
            }
        },
        "MAILMANMAX": {
            "TITLE": "Mailman Max",
            "SUMMARY": "Teach a computer to recognise handwriting",
            "DESCRIPTION": "Make a postal sorting office in Scratch that can recognise handwritten postcodes on envelopes.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-mailmanmax.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-mailmanmax.pdf"
        },
        "SHOOTTHEBUG": {
            "TITLE": "Shoot the bug",
            "SUMMARY": "Teach a computer to play a game",
            "DESCRIPTION": "Create a Breakout-style arcade game in Scratch that learns the angle to shoot balls at.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-shootthebug.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-shootthebug.pdf"
        },
        "CARORCUP": {
            "TITLE": "Car or cup",
            "SUMMARY": "Teach a computer to recognise pictures of objects",
            "DESCRIPTION": "Train the computer to be able to sort photos into groups.",
            "WORKSHEET_1": {
                "DESCRIPTION": "Individual version of the project, where each student trains their own machine learning model independently",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-carorcup.pdf"
            },
            "WORKSHEET_2": {
                "DESCRIPTION": "Group version of the project, where students in the class work together to train a shared machine learning model",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-carorcup-crowd.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-carorcup.pdf"
        },
        "FACELOCK": {
            "TITLE": "Face Lock",
            "SUMMARY": "Teach a computer to recognise faces",
            "DESCRIPTION": "Make a phone in Scratch that unlocks if it recognises your face.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-facelock.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-facelock.pdf"
        },
        "JOURNEYTOSCHOOL": {
            "TITLE": "Journey to school",
            "SUMMARY": "Teach a computer to make predictions",
            "DESCRIPTION": "Train the computer to be able to predict how you travel to school in the morning.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-journeytoschool.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-journeytoschool.pdf"
        },
        "SHYPANDA": {
            "TITLE": "Shy Panda",
            "SUMMARY": "Teach a computer to recognise pictures",
            "DESCRIPTION": "Make a dancing panda that gets shy and stops dancing if it sees you looking.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-shypanda.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-shypanda.pdf"
        },
        "VIRTUALPET": {
            "TITLE": "Virtual Pet",
            "SUMMARY": "Teach a computer to recognise pictures",
            "DESCRIPTION": "Train the computer to recognise what you're doing so you can look after a virtual pet.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-virtualpet.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-virtualpet.pdf"
        },
        "PACMAN": {
            "TITLE": "Pac-Man",
            "SUMMARY": "Naucz komputer, jak grać w grę.",
            "DESCRIPTION": "Create a Pac-Man game in Scratch that learns how to avoid the ghost.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-pacman.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-pacman.pdf"
        },
        "CHATBOTS": {
            "TITLE": "Chatbots",
            "SUMMARY": "Teach a computer to recognise questions",
            "DESCRIPTION": "Create a chatbot that can answer questions about a topic of your choice.",
            "WORKSHEET_1": {
                "DESCRIPTION": "Scratch project - for making a chat bot in Scratch",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-chatbots.pdf"
            },
            "WORKSHEET_2": {
                "DESCRIPTION": "Python project - for making a chat bot using Python",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-chatbots-python.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-chatbots.pdf"
        },
        "TOURISTINFO": {
            "TITLE": "Tourist Info",
            "SUMMARY": "Teach a computer to make recommendations",
            "DESCRIPTION": "Create a mobile app in Scratch that recommends tourist attractions based on people's interests.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-touristinfo.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-touristinfo.pdf"
        },
        "SORTINGHAT": {
            "TITLE": "Sorting Hat",
            "SUMMARY": "Teach a computer to recognise use of language",
            "DESCRIPTION": "Create a Sorting Hat like in Harry Potter, that puts you in a school House based on what you say.",
            "WORKSHEET_1": {
                "DESCRIPTION": "Individual version of the project, where each student trains their own machine learning model independently",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-sortinghat.pdf"
            },
            "WORKSHEET_2": {
                "DESCRIPTION": "Group version of the project, where students in the class work together to train a shared machine learning model",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-sortinghat-crowd.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-sortinghat.pdf"
        },
        "ROCKPAPERSCISSORS": {
            "TITLE": "Rock, Paper, Scissors",
            "SUMMARY": "Teach a computer to recognise shapes",
            "DESCRIPTION": "Make a Rock, Paper, Scissors game in Scratch that learns to recognise hand shapes.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-rockpaperscissors.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-rockpaperscissors.pdf"
        },
        "JUDGEABOOK": {
            "TITLE": "Judge a book",
            "SUMMARY": "Teach a computer to recognise visual style",
            "DESCRIPTION": "Make a game that tests whether it really is possible to judge a book by its cover.",
            "WORKSHEET_1": {
                "DESCRIPTION": "Full version of the Scratch project, where children make a game to compete against the computer to recognise books",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-judgeabook.pdf"
            },
            "WORKSHEET_2": {
                "DESCRIPTION": "Simplified version of the Scratch project, where children get the computer to recognise books",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-judgeabook-easy.pdf"
            },
            "WORKSHEET_3": {
                "DESCRIPTION": "App Inventor project, where children make a mobile app that recommends the best shelf for a book",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-judgeabook-appinventor.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-judgeabook.pdf"
        },
        "LOCATELARRY": {
            "TITLE": "Locate Larry",
            "SUMMARY": "Teach a computer to find something in a picture",
            "DESCRIPTION": "Make a \"Where's Wally?\"-style game in Scratch, and teach the computer to find your character.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-locatelarry.pdf"
            }
        },
        "FOOLED": {
            "TITLE": "Fooled",
            "SUMMARY": "Teach a computer to recognise fruit",
            "DESCRIPTION": "Learn about how computers can be confused and can make mistakes if they're trained badly.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-fooled.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-fooled.pdf"
        },
        "SCHOOLLIBRARY": {
            "TITLE": "School Library",
            "SUMMARY": "Teach a computer to make recommendations",
            "DESCRIPTION": "Create a school librarian in Scratch that suggests who a reading book might be suitable for.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-schoollibrary.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-schoollibrary.pdf"
        },
        "WHATTWITTERTHINKS": {
            "TITLE": "What does Twitter think?",
            "SUMMARY": "Teach a computer to measure public opinion",
            "DESCRIPTION": "Create a sentiment analysis tool in Scratch to analyze discussion on Twitter",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-whattwitterthinks.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-whattwitterthinks.pdf"
        },
        "NOUGHTSANDCROSSES": {
            "TITLE": "Noughts & Crosses",
            "SUMMARY": "Naucz komputer, jak grać w grę.",
            "DESCRIPTION": "Create a noughts and crosses game in Python that learns how to beat you.",
            "WORKSHEET_1": {
                "DESCRIPTION": "Classroom version, where each student makes the game themselves in Scratch",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-noughtsandcrosses.pdf"
            },
            "WORKSHEET_2": {
                "DESCRIPTION": "Classroom version, where each student makes the game themselves in Python",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-noughtsandcrosses-python.pdf"
            },
            "WORKSHEET_3": {
                "DESCRIPTION": "Demo version, for events like Science Fairs where each child has a minute or two to try something",
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-noughtsandcrosses-event.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-noughtsandcrosses.pdf"
        },
        "TOPTRUMPS": {
            "TITLE": "Top Trumps",
            "SUMMARY": "Naucz komputer, jak grać w grę.",
            "DESCRIPTION": "Train a computer to be able to play the Top Trumps card game in Scratch.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-toptrumps.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-toptrumps.pdf"
        },
        "HEADLINES": {
            "TITLE": "Headlines",
            "SUMMARY": "Test the computer's ability to recognise use of language",
            "DESCRIPTION": "Train a computer to recognise headlines from national newspapers.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-headlines.pdf"
            }
        },
        "NEWSPAPERSHELVES": {
            "TITLE": "Newspaper shelves",
            "SUMMARY": "Test the computer's ability to recognise use of language",
            "DESCRIPTION": "Train a computer to recognise headlines from national newspapers.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-headlines-easy.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-headlines-easy.pdf"
        },
        "HEADLINETESTING": {
            "TITLE": "Headline testing",
            "SUMMARY": "Test the computer's ability to recognise use of language",
            "DESCRIPTION": "Create a testing tool in Scratch to measure how good a machine learning model is",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-headlines.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-headlines.pdf"
        },
        "FINDIT": {
            "TITLE": "Find It!",
            "SUMMARY": "Teach a computer to recognise pictures",
            "DESCRIPTION": "Make a hide-and-seek game for your mobile phone.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-findit.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-findit.pdf"
        },
        "ALIENLANGUAGE": {
            "TITLE": "Alien Language",
            "SUMMARY": "Teach a computer to recognize sounds",
            "DESCRIPTION": "Make an alien in Scratch that learns to recognize an alien language.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-alienlanguage.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-alienlanguage.pdf"
        },
        "SECRETCODE": {
            "TITLE": "Secret Code",
            "SUMMARY": "Teach a computer to recognize speech",
            "DESCRIPTION": "Train a computer to understand secret code words to guide a spy.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-secretcode.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-secretcode.pdf"
        },
        "JARGONBUSTER": {
            "TITLE": "Jargon Buster",
            "SUMMARY": "Teach a computer to listen for words",
            "DESCRIPTION": "Make a project in Scratch that displays the meaning of words you say.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-jargonbuster.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-jargonbuster.pdf"
        },
        "TITANIC": {
            "TITLE": "Titanic",
            "SUMMARY": "Teach a computer to predict outcomes",
            "DESCRIPTION": "Create a Python program that can predict who survived the sinking of the Titanic.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-titanic-python.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-titanic.pdf"
        },
        "ZOMBIEESCAPE": {
            "TITLE": "Zombie Escape!",
            "SUMMARY": "Teach a computer to make predictions",
            "DESCRIPTION": "Train a computer to help you escape from the zombies",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-zombieescape.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-zombieescape.pdf"
        },
        "PHISHING": {
            "TITLE": "Phishing",
            "SUMMARY": "Teach a computer to recognize phishing web links",
            "DESCRIPTION": "Create a Python program that can predict if a URL is legitimate",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-phishing.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-phishing.pdf"
        },
        "KIWIORSTOAT": {
            "TITLE": "Kiwi or Stoat",
            "SUMMARY": "Teach a computer to recognize photos of animals",
            "DESCRIPTION": "Make a project in Scratch that can recognize the animals in photos from conservation sites",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-kiwiorstoat.pdf"
            }
        },
        "INKBLOTS": {
            "TITLE": "Ink blots",
            "SUMMARY": "Teach a computer to recognize photos of objects",
            "DESCRIPTION": "Recreate an MIT research project and learn about how AI systems are described in the news.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-inkblots.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-inkblots.pdf"
        },
        "FACEFINDER": {
            "TITLE": "Face Finder",
            "SUMMARY": "Use a computer that has been trained to recognize faces",
            "DESCRIPTION": "Make a video filter in Scratch to turn your face into a cartoon.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-facefinder.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-facefinder.pdf"
        },
        "EMOJIMASK": {
            "TITLE": "Emoji Mask",
            "SUMMARY": "Use a computer that has been trained to recognize faces",
            "DESCRIPTION": "Make a video filter in Scratch to add an emoji mask to your face.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-emojimask.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-emojimask.pdf"
        },
        "LASEREYES": {
            "TITLE": "Laser Eyes",
            "SUMMARY": "Teach a computer to recognize speech and faces",
            "DESCRIPTION": "Make a voice-activated laser eyes game in Scratch.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-lasereyes.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-lasereyes.pdf"
        },
        "SEMAPHORES": {
            "TITLE": "Semaphore Quiz",
            "SUMMARY": "Teach a computer to recognize speech and poses",
            "DESCRIPTION": "Make a voice-activated semaphores game you play by moving your arms.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-semaphores.pdf"
            },
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-semaphores.pdf"
        },
        "HANDGESTURES": {
            "TITLE": "Hand Gestures",
            "SUMMARY": "Teach a computer to recognize shapes",
            "DESCRIPTION": "Make a webcam project in Scratch that can recognize shapes you make with your hands.",
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-handgestures.pdf",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-handgestures.pdf"
            }
        },
        "EXPLAINABILITY": {
            "TITLE": "Explainable AI",
            "SUMMARY": "Teach a computer to recognize objects in a webcam",
            "DESCRIPTION": "Make a project in Scratch that helps explains what an image classifier is looking at.",
            "TEACHERSNOTES_URL": "https://github.com/IBM/taxinomitis-docs/raw/master/teachers-notes/pdf/teachersnotes-explainability.pdf",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-explainability.pdf"
            }
        },
        "POKEMONSTATS": {
            "TITLE": "Pokémon statistics",
            "SUMMARY": "Teach a computer to recognize patterns in sets of numbers",
            "DESCRIPTION": "Make a project in Scratch that predicts the type of Pokémon from their size and fighting stats.",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-pokemonstats.pdf"
            }
        },
        "POKEMONIMAGES": {
            "TITLE": "Pokémon images",
            "SUMMARY": "Teach a computer to recognize pictures",
            "DESCRIPTION": "Make a project in Scratch that predicts the type of Pokémon from how it looks",
            "WORKSHEET_1": {
                "URL": "https://github.com/IBM/taxinomitis-docs/raw/master/project-worksheets/pdf/worksheet-pokemonimages.pdf"
            }
        }
    },
    "TEACHER": {
        "MENU": {
            "TITLE": "Administration",
            "RESTRICTIONS": {
                "TITLE": "Restrictions",
                "DESCRIPTION": "Review limits and restrictions that apply to your class"
            },
            "APIKEYS": {
                "TITLE": "API Keys",
                "TITLELONG": "Watson API Keys",
                "DESCRIPTION": "Set up IBM Watson credentials to enable your class to create machine learning models"
            },
            "STUDENTS": {
                "TITLE": "Students",
                "TITLELONG": "Student management",
                "DESCRIPTION": "Create, reset and delete logins for students in your class"
            },
            "SUPERVISION": {
                "TITLE": "Supervision",
                "DESCRIPTION": "Review projects that your students have created"
            },
            "ADVANCEDOPTIONS": "Advanced options",
            "DELETECLASS": {
                "TITLE": "Delete class",
                "DESCRIPTION": "This will delete the accounts for you and all of the students in your class"
            },
            "CANYOUHELP": {
                "TITLE": "Can you help?",
                "DESCRIPTION": "Please share your experiences and ideas for how to make the tool better"
            },
            "NOTAUTHORISED": "You are not authorized to access the teacher page for your class."
        },
        "APIKEYS": {
            "TITLE": "Administration : IBM Watson API Keys",
            "ADDNEWCREDENTIALS": "Add new credentials",
            "ADDAPIKEY": "Add new API key",
            "REMOVE": "Remove",
            "VERIFY": "Verify",
            "LITE_30_DAYS_EXPIRE": "IBM Cloud may deactivate 'Lite' plan Watson API keys if they're not used for 30 days",
            "TRIAL_30_DAYS_EXPIRE": "IBM Cloud may deactivate trial plan Watson API keys after 30 days",
            "NO_TEXT_CREDENTIALS": "You don't have any Assistant credentials. This means that it will not be possible to train models for <strong>text</strong> projects.",
            "NO_IMAGE_CREDENTIALS": "You don't have any Visual Recognition API keys. <br/>This means that your students will only be able to train models for <strong>images</strong> projects on their computer (not in the cloud).",
            "LINK_TO_APIKEYS_GUIDE": "If you're not sure where to get them, download the <a href='/apikeys-guide'>step-by-step guide</a>",
            "NOTAUTHORISED": "You are not authorized to access the Watson API keys used by your class.",
            "MANAGEDCLASS": "API Keys used by your class are being managed for you.",
            "HELP_STEPBYSTEP_GUIDE": "If you're not sure what to do here, please follow the <a href='/apikeys-guide'> step-by-step guide </a>. If you'd like any help, please <strong><a style='cursor: pointer;' href='/help'>get in touch</a></strong>.",
            "INTRO_WATSONASSISTANT": "Training machine learning models for <span class='mlprojecttype'>text</span> projects uses <a class='mlprojecttype' href='https://www.ibm.com/cloud/watson-assistant/'>Watson Assistant</a>",
            "INTRO_NUMBERS": "Training machine learning models for <span class='mlprojecttype'>numbers</span> projects does <strong>not</strong> require any API keys",
            "INTRO_SOUNDS": "Training machine learning models for <span class='mlprojecttype'>sound</span> projects does <strong>not</strong> require any API keys",
            "INTRO_IMAGES": "Training machine learning models for <span class='mlprojecttype'>images</span> projects does <strong>not</strong> require any API keys",
            "ERROR_FETCHING_WATSONASSISTANT": "Failed to get your Watson Assistant passwords",
            "USERNAME": "Username",
            "PASSWORD": "Password",
            "APIKEY": "API key",
            "NUMBER_OF_ML_MODELS": "Number of ML models",
            "UNKNOWN": "unknown",
            "UNLIMITED": "unlimited",
            "LIMIT_TEXT_PROJECTS": "Number of text machine learning models your students can have:",
            "ADD_API_KEYS": {
                "ASSISTANT_TITLE": "Add Watson Assistant credentials",
                "USED_FOR_TEXT_PROJECTS": "These will be used when your students train models in text projects.",
                "HIDDEN_FROM_STUDENTS": "This will not be shown to students in your group.",
                "PRICING_PLAN": "Which Pricing Plan did you use?",
                "ENTER_APIKEY": "Please enter the API key below",
                "ENTER_PASSWORD": "Please enter the username and password below",
                "CREDENTIALS_TYPE": "What did you create in Watson Assistant?"
            }
        },
        "RESTRICTIONS": {
            "TITLE": "Administration : Restrictions",
            "ASK_FOR_CHANGES": "If any of these restrictions cause a problem for your group, please <strong><a href='/help'>get in touch</a></strong>.",
            "CLASS_LIMITS": {
                "TITLE": "Limits for your class",
                "NUM_USERS": "You can have up to <span class='mlprojecttype'>{{ num }}</span> users (including students and teachers) in your group.",
                "NUM_TEXT_MODELS": "Your class is allowed to have up to <span class='mlprojecttype'>{{ num }}</span> machine learning models in total across all their <span class='mlprojecttype'>text</span> projects.",
                "NUM_IMAGE_MODELS": "Your class is allowed to have up to <span class='mlprojecttype'>{{ num }}</span> machine learning models in total across all their <span class='mlprojecttype'>images</span> projects.</div>"
            },
            "PROJECT_LIMITS": {
                "TITLE": "Limits for projects created by your students",
                "NUM_PROJECTS": "Each of your students is allowed to have up to <span class='mlprojecttype'>{{ num }}</span> projects.",
                "TYPES": "Your students can create projects to recognise <span class='mlprojecttype'>{{ types }}</span>.",
                "TRAINING_DATA": "Each <span class='mlprojecttype'>{{ type }}</span> project can have up to <span class='mlprojecttype'>{{ num }}</span> training data examples. "
            },
            "EXPIRY": {
                "TITLE": "To help you avoid the limits for number of machine learning models:",
                "TIME_LIMIT": "Machine learning models created for <span class='mlprojecttype'>{{ type }}</span> projects will automatically be deleted after <span class='mlprojecttype'>{{ num }}</span> hours.",
                "DONT_WORRY": "(Don't worry! Training data will not be deleted, so students can always train a new machine learning model again if they still need it after this.)"
            },
            "NOT_AUTHORIZED": "You are not authorized to access the restrictions in place for your class."
        },
        "SUPERVISION": {
            "TITLE": "Administration : Student projects",
            "INTRO_1": "This page displays a list of all of the projects that your class currently has. You can use it to review what they're working on.",
            "INTRO_2": "If you've hit the limit for the number of machine learning models that your class can create, you can use this to see which projects currently have a machine learning model, and delete any that you think are no longer needed.",
            "NO_PROJECTS_1": "None of the students in your class currently have any projects.",
            "NO_PROJECTS_2": "Once your students start creating projects, come back here to see an overview of their work.",
            "NAME": "Name",
            "TYPE": "Type",
            "STUDENT": "Student",
            "MODELS": "ML models",
            "DELETE": "Click the icon to delete",
            "NOT_AUTHORIZED": "You are not authorized to access the list of projects for all students in your class."
        },
        "STUDENTMANAGEMENT": {
            "TITLE": "Administration : Student management",
            "CONTROLS": "Controls",
            "CREATE_FIRST_STUDENT": "Click on a 'plus' button on the right to create the first student",
            "CREATE_FIRST_GROUP": "Click on the 'plus' button on the right to create the first group",
            "ADD": "Add new student",
            "NEW_USERNAME": "Choose a unique username",
            "ALPHANUMERIC": "Only use letters and numbers",
            "NOT_LOGGED_IN": "Not logged in yet",
            "LAST_LOGIN": "Last login",
            "RESET_PASSWORD": "Reset password",
            "RESET_ALL_PASSWORDS": "Reset password for all students",
            "RESET_SELECTED_PASSWORDS": "Reset password for selected students",
            "DELETE_STUDENT": "Delete student",
            "DELETE_SELECTED_STUDENTS": "Delete selected students",
            "NOT_AUTHORIZED": "You are not authorized to access the list of students in your class.",
            "GROUPS": {
                "UNGROUPED": "Ungrouped students",
                "NO_UNGROUPED": "No ungrouped students",
                "LABEL": "Group",
                "CREATE": "Create group",
                "DELETE": "Delete group",
                "MOVE_IN": "Move selected students to group",
                "REMOVE_FROM": "Remove selected students from group"
            },
            "ADD_MULTIPLE": {
                "BUTTON": "Multiple students",
                "TITLE": "Add new students",
                "INTRO": "You can use this to create more than one student account at the same time.",
                "USERNAME": "What do you want each username to start with?",
                "USERNAME_REQUIRED": "Please choose the prefix for the usernames",
                "USERNAME_TOOLONG": "That is too long",
                "USERNAME_INVALID": "Invalid characters",
                "NUMBER": "How many student accounts do you want?",
                "NUMBER_REQUIRED": "Please enter the number of students to create",
                "NUMBER_TOOMANY": "Your class has a limit of {{userslimit}} students.",
                "PASSWORD": "The password to give them:",
                "PASSWORD_TOOSHORT": "Too short"
            }
        }
    },
    "SCRATCHBLOCKS": {
        "TEXT_PROJECTS": {
            "mlforkids.text.recogniseLabel": "recognise text [TEXT] (label)",
            "mlforkids.text.recogniseConfidence": "recognise text [TEXT] (confidence)",
            "mlforkids.text.addTraining": "add training data [TEXT] [LABEL]",
            "mlforkids.text.trainNewModel": "train new machine learning model",
            "mlforkids.text.checkModelStatus": "Is the machine learning model [STATUS] ?"
        },
        "IMAGES_PROJECTS": {
            "mlforkids.images.recogniseLabel": "recognise image [IMAGE] (label)",
            "mlforkids.images.recogniseConfidence": "recognise image [IMAGE] (confidence)",
            "mlforkids.images.addTraining": "add training data [TEXT] [LABEL]"
        },
        "NUMBER_PROJECTS": {
            "mlforkids.numbers.trainNewModel": "train new machine learning model"
        },
        "SOUND_PROJECTS": {
            "mlforkids.sounds.startListening": "start listening",
            "mlforkids.sounds.stopListening": "stop listening"
        },
        "TWITTER": {
            "mlforkids.twitter.getrecenttweet": "get the [INDEX] most recent tweet about [TOPIC]"
        },
        "FACE": {
            "mlforkids.face.size": "size of [LANDMARK]",
            "mlforkids.face.xlocation": "x coord of [LANDMARK]",
            "mlforkids.face.ylocation": "y coord of [LANDMARK]"
        },
        "POSENET": {
            "mlforkids.posenet.getposition": "find [POSITION] of [LANDMARK]"
        },
        "HANDPOSE": {
            "mlforkids.handpose.getposition": "find [POSITION] of [LANDMARK]"
        },
        "QNA": {
            "mlforkids.qna.getTopAnswer": "find answer to [QUESTION] in [PASSAGE]"
        },
        "TOXICITY": {
            "mlforkids.toxicity.confidencetrue": "probability that [TEXT] is [LABEL]",
            "mlforkids.toxicity.confidencefalse": "probability that [TEXT] is NOT [LABEL]"
        },
        "WIKIPEDIA": {
            "mlforkids.wikipedia.getpagetext": "Wikipedia text about [TOPIC]"
        },
        "IMAGE_BLOCKS": {
            "mlforkids.imageblocks.getCostumeImage": "costume image",
            "mlforkids.imageblocks.getBackdropCostumeImage": "backdrop image",
            "mlforkids.imageblocks.getBackdropImage": "backdrop image",
            "mlforkids.imageblocks.saveScreenshotToCostume": "save screenshot to costume"
        },
        "GUI": {
            "gui.menuBar.ml4kidssharing": "Share",
            "gui.menuBar.mlforkidsstartrecording": "Start recording the Stage",
            "gui.menuBar.mlforkidsstoprecording": "Stop recording the Stage",
            "gui.menuBar.mlforkidsLibrary": "Project templates",
            "gui.mlforkidsLibrary.templates": "Machine Learning for Kids modelos de projeto"
        }
    },
    "HELP": {
        "CONTACT": "If you have any problems or questions, please ask in <a href='https://groups.google.com/d/forum/mlforkids'>the ML for Kids Google Group</a>",
        "GETTINGSTARTED": {
            "TITLE": "Getting started?",
            "INTRO": "Download a PDF with a short getting started guide:",
            "MANAGED": "Managed class accounts",
            "MANAGEDEXPL": "For school teachers, coding group leaders, or other volunteers",
            "UNMANAGED": "Unmanaged class accounts",
            "UNMANAGEDEXPL": "For IBM employees, or teachers and coding group leaders who manage their own class accounts"
        },
        "FAQS": {
            "TITLE": "Want to know more?",
            "INTRO1": "Is something not working?",
            "INTRO2": "The list below contains the questions and issues that I hear about most often. If you see something that looks similar to your problem, click on the summary for more info.",
            "INTRO3": "If you're still stuck, or you've run into a problem I've not included in the list, sorry! Please <a href='https://groups.google.com/d/forum/mlforkids'>ask a question in the mlforkids Google Group</a> so that I can help."
        },
        "PROJECTS": {
            "TITLE": "Project questions",
            "Q4": "Which machine learning models are trained on your computer, and which are trained in the cloud?",
            "Q4-A-1": "<strong>text</strong> projects can only be trained in the cloud.",
            "Q4-A-2": "<strong>numbers</strong> projects can only be trained in the cloud.",
            "Q4-A-3": "<strong>sounds</strong> projects can only be trained on your computer.",
            "Q4-A-4": "<strong>images</strong> projects can be trained on your computer, or (if you have access to Watson Visual Recognition) in the cloud."
        },
        "SCRATCH": {
            "TITLE": "Scratch issues",
            "Q1": "I don't know how to get Scratch 2 working",
            "Q1-A-1": "The old version of Scratch, Scratch 2, needs Adobe Flash to work, so you need to be using an operating system and a web browser that can work with Flash.",
            "Q1-A-2": "If you're not sure about how to enable Flash, you can            <a href='https://github.com/IBM/taxinomitis-docs/raw/master/docs/pdf/machinelearningforkids-scratchx.pdf'>download a document with some tips for getting Scratch working</a>. Or you can use the new version of Scratch, Scratch 3, instead.",
            "Q2": "The \"Load Project\" and \"Save Project\" menus in Scratch don't work",
            "Q2-A-1": "If you're using Safari on macOS and the Scratch menus \"File -&gt; Load Project\" and \"File -&gt; Save Project\" menus aren't working, it might be that you're running in Safe Mode.",
            "Q2-A-2": "<a href='https://github.com/IBM/taxinomitis-docs/raw/master/docs/pdf/safari-scratch-safemode.pdf'>Follow the instructions here</a> for how to check and fix this.",
            "Q3": "Machine learning classifier blocks in Scratch 2 stopped working",
            "Q3-A-1": "Occassionally, the Scratch blocks for your machine learning model can lose the connection to the server. When this happens, they will stop returning results.",
            "Q3-A-2": "You can check whether this has happened using the coloured status light in the \"More Blocks\" palette.",
            "Q3-A-3": "If the status light next to your machine learning Scratch blocks is red, that normally means something is wrong. It might be a temporary problem. Try saving your project (using 'File' -&gt; 'Save Project'), then refresh the browser page. If the status light goes green after the page reloads, you can load your project (using 'File' -&gt; 'Load Project') to pick up where you left off.",
            "Q3-A-4": "If the status light is still red after reloading the page, then there is probably something wrong with the machine learning model. Try going to the \"Learn &amp; Test\" page for the project, which is where any error messages about your model can be found.",
            "Q3-A-5": "If the status light next to your machine learning Scratch blocks is green, then the blocks should be working. If you're not getting the responses you expect from them, try going to the \"Learn &amp; Test\" page and checking what results your model returns.",
            "Q5": "Can I use any version of Scratch?",
            "Q5-A-1": "You need to use the versions of Scratch that are provided by the Machine Learning for Kids site. They can be launched by clicking the Scratch, or 'Scratch 3', buttons from your project page.",
            "Q6": "Scratch 3 is only saving projects to the 'Downloads' folder",
            "Q6-A-1": "When you click 'File' -> 'Save to your computer' in Scratch 3, your Scratch project is saved to your computer.",
            "Q6-A-2": "Some teachers reported a problem that this saved to the Downloads folder, on a computer where students don't have access in Windows to the Downloads folder. The result was that students were not able to access their saved projects.",
            "Q6-A-3": "If you have this problem, you need to look in your web browser settings for a setting like 'Ask where to save each file before downloading'. If you enable that, your students will be able to choose where their projects are saved."
        },
        "TRAININGUI": {
            "TITLE": "Training UI issues",
            "Q1": "Dragging images into training buckets (for image projects) doesn't work",
            "Q1-A-1": "Dragging images into the training buckets doesn't work if you're using Internet Explorer.",
            "Q1-A-2": "Sorry about this. If you can use another browser like Firefox or Chrome, please do that. Otherwise, you can click the \"www\" button and paste in the URL of training pictures instead."
        },
        "MODELS": {
            "TITLE": "Errors training machine learning models",
            "Q1": "\"No Watson credentials have been set up\"",
            "Q1-A-1": "Machine learning models in the tool are created using IBM Watson APIs.",
            "Q1-A-2": "If you have an \"unmanaged\" class account, then your teacher or group leader will need to provide Watson API credentials from IBM Cloud for this to work. Step-by-step instructions for how they can do this are in the \"Getting Started\" document at the top of this page.",
            "Q2": "\"Watson credentials being used by your class were rejected\"",
            "Q2-A-1": "Machine learning models in the tool are created using IBM Watson APIs.",
            "Q2-A-2": "If you have an \"unmanaged\" class account, then your teacher or group leader will have provided Watson API credentials from IBM Cloud for this to work (as described in the \"Getting Started\" document at the top of this page).",
            "Q2-A-3": "However, the credentials that were provided are currently not working. The most likely reason is that the credentials were deleted from IBM Cloud since they were originally provided. If that isn't the case, the teacher or group leader who provided the Watson credentials needs to go back to the IBM Cloud dashboard to check the status of the Watson Assistant or Visual Recognition service that they created.",
            "Q3": "\"Watson Assistant API keys have no more skills available\"",
            "Q3-A-1": "Machine learning models in the tool are created using IBM Watson APIs.",
            "Q3-A-2": "Watson Assistant credentials created by teachers have a limit on the number of machine learning models that they can be used to create. This is displayed in the IBM Cloud UI where the credentials were created, where they are called \"skills\".",
            "Q3-A-3": "If this limit is exceeded, attempts to train new machine learning models will fail, and this message will be displayed:",
            "Q3-A-4": "Your class already has created their maximum allowed number of models. Please let your teacher or group leader know that their \"Watson Assistant API keys have no more skills available\".",
            "Q3-A-5": "If a student who has a successfully trained model then deletes their model, this will free up a skill for use by another student.",
            "Q3-A-6": "One way to avoid this error in future would be smaller class sizes. If there are fewer students than the number of skills supported by the Watson Assistant credentials, then the limits will not be hit.",
            "Q3-A-7": "Another way to avoid this error is to add additional Watson Assistant API keys to the class, or to use a Watson Assistant instance \"plan\" that has higher limits.",
            "Q5": "\"Watson ... is currently rate limiting their API key\"",
            "Q5-A-1": "Machine learning models in the tool are created using IBM Watson APIs.",
            "Q5-A-2": "If you have an \"unmanaged\" class account, then your teacher or group leader will need to provide Watson API credentials from IBM Cloud for this to work.",
            "Q5-A-3": "If free accounts are created, they will apply a limit on the rate of requests for new machine learning models. In normal usage, this will not impact the class. However, if students get a \"no more skills available\" or \"no more classifiers available\" error (as described above) but then continue to click the \"Train new Machine Learning model\" button multiple times per second, for several minutes, then the rate limiting will apply.",
            "Q5-A-4": "A message like this will be displayed to students in this case:",
            "Q5-A-5": "Your class is making too many requests to create machine learning models at too fast a rate. Please stop now and let your teacher or group leader know that \"the Watson Assistant service is currently rate limiting their API key\"",
            "Q5-A-6": "The rate limiting isn't applied by, or under the control of, the Machine Learning for Kids site. It is usually temporary, and is best resolved by waiting for a short time.",
            "Q5-A-7": "If students are clicking the \"Train new Machine Learning model\" button and getting \"no more skills available\" or \"no more classifiers available\" errors (as described above), then they should be aware that repeatedly clicking the button will not resolve the issue, and will in fact make the situation worse for the rest of the class.",
            "Q6": "I've been waiting for a model to train for ages!",
            "Q6-A-1": "Try refreshing the page.",
            "Q6-A-2": "The page should check on the status of the machine learning model every 30 seconds, but very occassionally it stops checking, so you might be waiting for the model when it is actually ready for you.",
            "Q6-A-3": "If it's been more than a few minutes, it's worth checking by refreshing / reloading the page.",
            "Q6-A-4": "If it's been more than ten minutes, it might be worth considering restarting (click the Cancel button and then click the button to train a new machine learning model again).",
            "Q7": "\"Your class is sharing Watson API keys ... there are currently none available\"",
            "Q7-A-1": "Machine learning models in the tool are created using IBM Watson APIs.",
            "Q7-A-2": "If you have a \"managed\" class account, this means your class is sharing these keys with many other schools. ",
            "Q7-A-3": "There are normally enough for all schools, but if it is very busy and all of the available API keys are currently in use, attempts to train new machine learning models will fail, and this message will be displayed:",
            "Q7-A-4": "Your class is sharing Watson Assistant / Visual Recognition \"API keys\" with many other schools, and unfortunately there are currently none available. Please let your teacher or group leader know that you will have to train your machine learning model later",
            "Q7-A-5": "If a student who has a successfully trained model then deletes their model, this will free up a skill for use by another student.",
            "Q7-A-6": "The best thing to do is to try again later, after other students have deleted their machine learning models and API keys are available again. Your training data will still be safe until then.",
            "Q7-A-7": "Another way to avoid this error is for your class to create an \"unmanaged\" class account, which is where a teacher creates their own Watson \"API keys\" that can be dedicated only for use by their own class."
        },
        "TEACHERUI": {
            "TITLE": "Teacher / Admin UI issues",
            "Q2": "Missing student account from the list in the teacher's page",
            "Q2-A-1": "User management for Machine Learning for Kids is implemented using the third party service, <a href=\"https://auth0.com/\">Auth0</a>.",
            "Q2-A-2": "Occassionally, the list of students that Auth0 returns can get a little out of date, and fail to reflect students that have recently been created (or similarly, still show students that have been recently deleted).",
            "Q2-A-3": "In these instances, the students have normally been successfully created (or deleted) and it is just that the list of students being displayed doesn't reflect recent updates.",
            "Q2-A-4": "Auth0 will normally report such incidents on their status page as <a href='https://status.auth0.com/incidents/0sk1d3hjlw0m'>user indexing delays</a> or <a href='https://status.auth0.com/incidents/t8995b9jggx5'>problems with their Search API</a>.",
            "Q2-A-5": "The best thing to do in these cases is to wait for the Auth0 indexing to catch up.",
            "Q4": "Why are machine learning models automatically deleted?",
            "Q4-A-1": "This was a feature requested by schools when Machine Learning for Kids was first developed. It came from the fact that there is a limit for how many machine learning models a class can have at any given time, and a need to make it easy to manage this limit.",
            "Q4-A-2": "Rather than requiring kids to have to clean up after a lesson and delete their models (in order to allow the next class to be able to create models), the tool can automatically clean up by deleting the models after the lesson is over. This makes it easy to run the next lesson, and the next lesson after that, without manual clean-ups in between.",
            "Q4-A-3": "The time limit before models are deleted is configurable. In a school, where lessons are 1 or 2 hours long, deleting models after two hours might be sensible. For a weekly coding club, six days might be a better fit to make sure that models are cleared up before each new club session.",
            "Q4-A-4": "To specify the time limit for your class, visit the <a href='https://machinelearningforkids.co.uk/#!/teacher/restrictions'>Restrictions section of your Teacher page</a>.",
            "Q4-A-6": "<em>Note: Only machine learning models are automatically deleted, not the training data that was used to create them. So if a model is automatically deleted for a project that a student is still working on, they can always just click the \"Train\" button again to create the model again.</em>"
        },
        "ACCOUNTISSUES": {
            "TITLE": "Account issues",
            "Q1": "What is the difference between creating accounts or using \"Try it now\"?",
            "Q1-A-1": "Using \"Try it now\" to means there is no need to log on or create an account. There are no passwords for students to have to remember, and no need for teachers to have to provide personal information. It also saves teachers the time needed to manage student accounts.",
            "Q1-A-2": "However, creating an account does enable additional features. Students can save their work and come back to it in a later lesson. They can work on a project together with other students in their class. They can log on from home and show their family what they've made.",
            "Q1-A-3": "A summary of the differences is shown below:",
            "CREATE_ACCOUNT": "Create an account",
            "TRAINMODELS": "Train machine learning models to recognise...",
            "PRETRAINED_MODELS": "Use pre-trained machine learning models",
            "TENSORFLOW_MODELS": "Use hosted TensorFlow models",
            "SCRATCH_ONLY": "(use from Scratch only)",
            "USE": "Use machine learning models from...",
            "CREATE_PROJECTS": "Create projects",
            "ONE_PROJECT": " 1 project ",
            "MULTIPLE_PROJECTS": " Multiple projects ",
            "SAVE_PROJECTS": "Save and load projects",
            "WORK_ON_PROJECTS": "Work on machine learning projects...",
            "FEW_HOURS": " for a few hours ",
            "UNTIL_DELETION": " until you delete them ",
            "ONE_COMPUTER": " from one computer ",
            "ONLINE": " anywhere online ",
            "BY_YOURSELF": " by yourself ",
            "WITH_CLASSMATES": "with classmates",
            "Q2": "I've created a class account but my teacher's logon isn't working",
            "Q2-A-1": "You need to verify your email address before you'll be able to log on.",
            "Q2-A-2": "When you created the class account, an email will be sent to the email address you provided, with a link to click on. If you click on that link, your email address will be verified and the class account will be activated. You should be able to log on now.",
            "Q2-A-3": "If you haven't seen the verify email yet, make sure it's not gone into your spam folder.",
            "Q2-A-4": "If you still can't find it, <a href='https://groups.google.com/d/forum/mlforkids'>let me know</a> and I'll try and help.",
            "Q3": "Deleting accounts",
            "Q3-A-1": "Student accounts",
            "Q3-A-2": "Students cannot delete their own accounts.",
            "Q3-A-3": "A teacher can delete a student account at any time by visiting the \"Teacher\" page  and clicking the \"Delete student account\" button next to the student account you want to delete.",
            "Q3-A-4": "This will delete all information stored about that student and all of their projects and machine learning models.",
            "Q3-A-5": "It cannot be undone.",
            "Q3-A-6": "Teacher accounts",
            "Q3-A-7": "Deleting a teacher account will delete the entire class and all of the student accounts in it. It cannot be undone.",
            "Q3-A-8": "This can be done by clicking the \"Delete Class\" button in the Advanced options section of <a href='https://machinelearningforkids.co.uk/teacher'>your Teacher page</a>",
            "Q4": "What information is stored about users?",
            "Q4-A-1": "Teacher accounts",
            "Q4-A-2": "I store the username and email address that you provide when you create the account, so that I can keep in touch with you.",
            "Q4-A-3": "Student accounts",
            "Q4-A-4": "I store the usernames for student accounts, so that I can let them log in. I have no email addresses or contact details for students. I have no other personally identifying information about students.",
            "Q4-A-5": "I also <a href='https://github.com/IBM/taxinomitis-docs/raw/master/docs/pdf/machinelearningforkids-schools.pdf'>recommend that students are given generic usernames</a> (e.g. student1) so that students are not identifiable outside of their school or coding group.",
            "Q4-A-6": "General information stored about all accounts",
            "Q4-A-7": "User management for Machine Learning for Kids is implemented using the third party service, <a href='https://auth0.com/'>Auth0</a>. They store the IP address that you last logged into Machine Learning for Kids from, and the type of browser you used. I've never found a reason to use that, but it is stored if I did want to go and look for it.",
            "Q4-A-8": "Errors that happen in the web browser are captured using the third party service, <a href='https://sentry.io/'>Sentry</a>. If something goes wrong, it will capture information about the error, including your username, IP address, type of browser you were using, and a technical description of what went wrong.",
            "Q4-A-9": "I use <a href='https://www.google.com/analytics/'>Google Analytics</a> so that I know how many users visit Machine Learning for Kids each day. Although it captures information such as geographic location and browser type, this is only ever displayed to me in an anonymised aggregate way.",
            "Q5": "What happens to training data created by students?",
            "Q5-A-1": "A step in all machine learning projects that students make using this site is to create or collect training examples. For text projects, this can mean typing in short text passages. For image projects, this can means drawing pictures onto an on-screen canvas or taking photos using the webcam. For numbers projects, this means typing in sets of numbers",
            "Q5-A-2": "All of these training examples are stored in a <a href='https://www.ibm.com/cloud/databases-for-postgresql'>PostgreSQL database hosted on IBM Cloud</a>, in Dallas in the United States. As the database administrator, I have access to all of these training examples for all student projects, however I do not use it for any other purposes other than enabling students to access and work on their own projects. I do not publish the training data (either publicly or to individuals or third parties) or otherwise share it, with the two exceptions of submitting it to IBM Watson APIs described below.",
            "Q5-A-3": "Machine learning models for text projects are created using the <a href='https://www.ibm.com/cloud/watson-assistant/'>IBM Watson Assistant</a> cloud service, which means when students train a model, a copy of the training examples that they have entered will be <a href='https://cloud.ibm.com/apidocs/assistant#create-workspace'>submitted to IBM Watson</a>. (The location of this cloud service is something that teachers choose when <a href='https://machinelearningforkids.co.uk/apikeys-guide'>creating API keys</a>.) IBM Watson does not use these training examples for any other purposes. This is because Machine Learning for Kids <a href='https://cloud.ibm.com/apidocs/assistant#data-collection'>requests an opt-out</a> for student training examples being used by IBM to improve the service, as <a href='https://cloud.ibm.com/docs/services/watson?topic=watson-gs-logging-overview'>described in the Watson documentation</a>.",
            "Q5-A-4": "Machine learning models for images projects are created using the <a href='https://www.ibm.com/watson/services/visual-recognition/'>IBM Visual Recognition</a> cloud service, which means when students train a model, a copy of their training images will be <a href='https://cloud.ibm.com/apidocs/visual-recognition#create-a-classifier'>uploaded to IBM Watson</a>. (The location of this cloud service is something that teachers choose when <a href='https://machinelearningforkids.co.uk/apikeys-guide'>creating API keys</a>.) IBM Watson does not use these training examples for any other purposes. This is because Machine Learning for Kids <a href='https://cloud.ibm.com/apidocs/visual-recognition#data-collection'>requests an opt-out</a> for student training examples being used by IBM to improve the service, as <a href='https://cloud.ibm.com/docs/services/watson?topic=watson-gs-logging-overview'>described in the Watson documentation</a>.",
            "Q5-A-5": "IBM Watson provides some <a href='https://cloud.ibm.com/docs/services/assistant?topic=assistant-information-security#information-security-gdpr-wa'>general guidance for sharing training data with their services</a>, which also apply to training data created and collected in Machine Learning for Kids. Specifically, students should be advised not to include personally identifiable information in the examples that they collect."
        }
    },
    "APIKEYSGUIDE": {
        "TITLE": "Guide to IBM Cloud",
        "INTRO": {
            "INTRO_1": "Teachers / parents / code club-leaders with unmanaged class accounts need to provide '<strong>API Keys</strong>' from IBM Cloud. These are secret codes that provide access to the artificial intelligence technology that will power student projects.",
            "INTRO_2": "Text projects need a 'Watson Assistant' API Key. (Images, numbers and sound projects don't require API Keys).",
            "INTRO_3": "You will need to create an account on IBM Cloud to be able to create these codes. It is free to create an account, and there are no charges for 'Lite' API Keys. "
        },
        "LINK": "How to create API Keys",
        "EXPLANATION": "Download a step-by-step guide for how to create API Keys on IBM Cloud"
    },
    "PRETRAINED": {
        "TITLE": "Pre-trained models",
        "INTRO": {
            "INTRO_1": "<strong>Machine Learning for Kids</strong> provides pre-trained models you can use in your projects. Real-world machine learning projects often use models already trained by other people. There are lots of well-trained models that are freely available, and these are useful when you don't have time to collect the amount of training data needed to train your own."
        },
        "HOWTO": {
            "TITLE": "How to use",
            "INTRO": "Click on the button to go to Scratch.",
            "HOW_1": "Go to the version of <a href='https://scratch.machinelearningforkids.co.uk'>Scratch 3</a> available from Machine Learning for Kids.",
            "HOW_2": "Pre-trained models are available from the Extensions panel. Click on the blue extensions button in the bottom-left of the Scratch window to find them, then click on the one you want to add to your project.",
            "HOW_3": "The blocks for the pre-trained model will be added to the Scratch toolbox."
        },
        "SPEECHTOTEXT": {
            "TITLE": "Speech to text",
            "SPEECH_1": "This model can be used to recognize speech recorded through your microphone.",
            "SPEECH_2": "It gives you a block you can use to record some audio and then give you the text that it recognized, and a block that you can tell it to listen out for a particular word or phrase.",
            "SPEECH_3": "It uses the speech recognition capability that comes with Google Chrome, so the ML model that you'll be using comes from Google. (It also means that you can only use this model if you're using the Google Chrome web browser, sorry!)"
        },
        "FACEAPI": {
            "TITLE": "Face detection",
            "FACE_1": "This model can be used to recognize your face in the video feed from your webcam.",
            "FACE_2": "It gives you blocks that will find the x,y coordinates of your eyes, nose and mouth.",
            "FACE_3": "This uses a top-down technique - it starts by looking for something that looks like a face in the picture. Once it has found that, it tries to identify facial features in that area. The machine learning model is based on MobileNet (a ML model designed for mobile devices, so it doesn't need much computing power).",
            "FACE_4": "The training data used for this model came from a set known as <a href='http://shuoyang1213.me/WIDERFACE/' target='_blank'>WIDER FACE</a>."
        },
        "POSENET": {
            "TITLE": "Pose detection",
            "POSE_1": "This model can be used to recognize your pose in the video feed from your webcam.",
            "POSE_2": "It gives you blocks that will find the x,y coordinates of different parts of your body, like shoulders, elbows, wrists, knees, and ankles.",
            "POSE_3": "This uses a bottom-up technique - looking for human body key points (like shoulders, elbows, knees, etc.) and then grouping them to identify a person and the pose that they're in. ",
            "POSE_4": "The training data used for this model came from a set known as <a href='http://cocodataset.org/index.htm#keypoints-2019' target='_blank'>Common Objects in Context (COCO)</a>.",
            "POSE_5": "For more information, including a description of some of the challenges and potential issues with the model, see the <a href='https://drive.google.com/file/d/1VFC_wIpw4O7xBOiTgUldl79d9LA-LsnA/view'>model card</a>."
        },
        "HANDPOSE": {
            "TITLE": "Hand detection",
            "POSE_1": "This model can be used to recognize your hand in the video feed from your webcam.",
            "POSE_2": "It gives you blocks that will find the x,y coordinates of different parts of your hand: the tips of each of your fingers, and your wrist.",
            "POSE_3": "It can only return information about one hand in the view.",
            "POSE_4": "For more information, including a description of some of the challenges and potential issues with the model, see the <a href='https://drive.google.com/file/d/1sv4sSb9BSNVZhLzxXJ0jBv9DqD-4jnAz/view'>model card</a>."
        },
        "TOXICITY": {
            "TITLE": "Toxicity",
            "TOXICITY_1": "This model can be used to recognize whether text contains toxic content.",
            "TOXICITY_2": "It gives you blocks that will predict the percentage probability that some provided text contains toxic content such as threatening language, insults, obscenities, or identity-based hate.",
            "TOXICITY_3": "The training data used for <a href='https://medium.com/tensorflow/text-classification-using-tensorflow-js-an-example-of-detecting-offensive-language-in-browser-e2b94e3565ce'>this model</a> came from <a href='https://figshare.com/articles/data_json/7376747' target='_blank'>two-million user-generated comments posted on news articles</a>."
        },
        "IMAGENET": {
            "TITLE": "Imagenet",
            "IMAGENET_1": "This model can be used to recognize objects in a costume.",
            "IMAGENET_2": "It gives you blocks that will predict the main object shown in a sprite.",
            "IMAGENET_3": "It has been trained to recognize photos of <a href='https://storage.googleapis.com/download.tensorflow.org/data/ImageNetLabels.txt'>one-thousand common objects</a>. The machine learning model is based on MobileNet (a ML model designed for mobile devices, so it doesn't need much computing power).",
            "IMAGENET_4": "It has been trained to recognize photos, and won't recognize cartoons or drawings very well."
        },
        "QNA": {
            "TITLE": "Question Answering",
            "QNA_1": "This model can be used to find answers to questions.",
            "QNA_2": "It gives you a block that will look for the answer to a question in some text that you give it.",
            "QNA_3": "It is a type of machine learning model called <a href='https://github.com/google-research/bert'>BERT</a> which is useful for projects with text.",
            "QNA_4": "It has been trained using a set of questions and answers from Wikipedia articles collected by Stanford University called '<a href='https://rajpurkar.github.io/SQuAD-explorer'>SQuAD</a>'.",
            "QNA_5": "This is a complex model, so you might find that it is slow and needs a lot of memory on your computer!"
        },
        "SPICE": {
            "TITLE": "Pitch estimation",
            "SPICE_1": "This model can be used to recognize a note being sung from your computer's microphone.",
            "SPICE_2": "It gives you blocks that will return the frequency of a note it recognized, and to convert that into the name or MIDI note.",
            "SPICE_3": "The model, called <a href='https://ai.googleblog.com/2019/11/spice-self-supervised-pitch-estimation.html'>SPICE</a>, has been trained to identify the dominant pitch in sung audio, including being able to recognize a sung note even if there is background music and noise.",
            "SPICE_4": "The training data used for this model came from <a href='https://sites.google.com/site/unvoicedsoundseparation/mir-1k'>MIR-1K</a>, which is a set of 1000 short sound recordings of amateur singers singing along to karaoke.",
            "SPICE_5": "You will need to let Scratch use your microphone to use this model."
        },
        "IDEAS": {
            "IDEAS_1": "Are there other machine learning models you would like to be able to use in your Scratch projects?",
            "IDEAS_2": "Let me know by asking in the <a href='https://groups.google.com/d/forum/mlforkids'>ML for Kids forum</a>."
        },
        "TENSORFLOW": {
            "TITLE": "TensorFlow",
            "BUTTON": "Open a TensorFlow model",
            "TF_1": "<a href='https://www.tensorflow.org/'>TensorFlow</a> is a toolkit for training and running machine learning models.",
            "TF_2": "If you know how to create your own machine learning model with TensorFlow, click the button above to use it in Scratch.",
            "TF_3": "You can <a href='https://www.tensorflow.org/overview/'>build your own model</a>, using programming languages like Python.",
            "TF_4": "Or you can use tools like <a href='https://teachablemachine.withgoogle.com/'>Teachable Machine</a> to easily train a TensorFlow model, and then make something with it in Scratch here.",
            "TF_5": "(Only image classifiers are supported today, but support for more types of machine learning model is coming soon!)"
        }
    },
    "BOOK": {
        "TITLE": "Book",
        "NOTES_1": "<strong>Machine Learning for Kids : A Project-Based Introduction to Artificial Intelligence</strong> is a new book to accompany the site.",
        "NOTES_2": "The book is a guided hands-on and practical introduction to how artificial intelligence impacts our lives. It includes step-by-step instructions for making a variety of machine learning-powered projects in Scratch, and explains how they each relate to real-world AI applications.",
        "NOTES_3": "Several projects dive deeper into particular aspects of how machine learning is applied, including recreating some of the most common mistakes made in AI, and learning about the different ways that the performance of machine learning systems can be measured and described.",
        "NOTES_4": "Finally, the book ends by recreating examples of biased machine learning systems, and discusses the AI ethics issues that they raise.",
        "UPDATES": {
            "TITLE": "Updates and corrections",
            "NOTES": "Any updates or corrections will be posted here. For more help, please see the <a ui-sref='help'>Help</a> page."
        }
    },
    "STORIES": {
        "TITLE": "What students learn about AI/ML",
        "DOWNLOAD": "Download instructions to create this project",
        "INTRO": {
            "PRINT": "print as article",
            "TEXT1": "The goal of <strong>Machine Learning for Kids</strong> is to help students learn about artificial intelligence and machine learning. This is done by providing opportunities to make things using machine learning technologies.",
            "TEXT2": "When given time and freedom to build and experiment with machine learning in a familiar sandbox like Scratch, students discover a lot about how this technology is applied and behaves.",
            "TEXT3": "These stories are examples: examples of what students observed, what they did, and what they learned. These are useful insights for planning how to introduce AI/ML in the classroom.",
            "TEXT4": "If you have your own story, <a href='https://groups.google.com/g/mlforkids'>please consider contributing it</a>."
        },
        "EXAMPLES": {
            "VIDEO": "🎥 See the video for an example.",
            "IMAGES": "🖼️ See the image for examples."
        },
        "MLHASNTREPLACEDCODING": {
            "TITLE": "Machine learning hasn't replaced the need to learn to code",
            "TEXT1": "I like to introduce students to machine learning by allowing them to make things with <a href='/pretrained'>pretrained models</a> - a range of new blocks that can be added to the Scratch palette to represent a variety of powerful machine learning models.",
            "TEXT2": "For example, imagenet: a model that can recognise the object in a photo that you give it. It can recognise over a thousand different things.",
            "TEXT3": "With just a few Scratch blocks, students can start building projects that do remarkably powerful and impressive things.",
            "TEXT4": "Another example is the face detection model: a model that can identify different parts of a face (e.g. eyes, nose, ears, etc.) in a picture or webcam view. ",
            "TEXT5": "With just a few Scratch blocks, students can make a fun face filter with animated sprites that follow their face. ",
            "TEXT6": "These are very simple projects to build, but they offer a lot of opportunity for experimentation and creativity.",
            "TEXT7": "Learning about machine learning in a sandbox that students are already familiar with (rather than learn about AI/ML in a new AI-specific tool or platform) sends a clear message to students. ",
            "TEXT8": "Students shouldn't think that what they already learn about coding isn't useful any more. They shouldn't get the impression that learning to code is somehow less valuable because machine learning models will just magically do stuff for them in the future.",
            "TEXT9": "Instead, students see that machine learning adds new tools to their existing toolbox. They see that what they've been learning about coding is still important and valuable, and that machine learning expands the types of things they're able to build.",
            "CALLOUT": "Building with machine learning in an existing sandbox like Scratch makes it clear that ML isn't separate to, or a replacement for, coding."
        },
        "MLWORKFLOW": {
            "TITLE": "Workflow of a machine learning project",
            "TEXT1": "If students are given the time and freedom to create their own machine learning models, rather than being <a href='/#!/stories/ml-hasnt-replaced-coding'>given an existing model to use</a>, they can learn even more.",
            "TEXT2": "A major part of the Machine Learning for Kids site is a child-friendly training tool that can be used to create a wide range of machine learning models.",
            "TEXT3": "For example, students can make their own simple chatbots, by training a text classifier to recognise frequently asked questions. They can choose their own subject for what the chatbot can answer questions about. In the video shown here, the student chose to make a project about the Moon.",
            "TEXT4": "They have to guess what questions someone might ask about their subject. In the video shown, you can see the student thought someone might ask where the Moon is, how big it is, how cold it is on the Moon, or what it's made of.",
            "TEXT5": "For each of those questions, they came up with a few examples of how someone might ask that question.",
            "TEXT6": "They used those examples to train their own custom machine learning model, unique to their project.",
            "TEXT7": "Then they scripted the responses that their chatbot should give when it gets a question that it has learned to recognise.",
            "TEXT8": "I've run this project with school classes dozens of times, and it is different every time, with each class bringing their own creativity and imagination to the chatbot.",
            "TEXT9": "I've helped history classes make chatbot Vikings, chatbot Romans, and chatbot Ancient Greeks - trained to answer about what it was like to live in their times, what they ate, what they wore, and so on. ",
            "TEXT10": "I've helped English classes have created chatbot Shakespeares that they trained to answer questions about his life and some of his most famous plays. ",
            "TEXT11": "I've helped school clubs create local chatbot guides about their own school or their own town, trained to answer questions about their local area. ",
            "TEXT12": "By going through the process for themselves, they learn the workflow of a machine learning project - a workflow that is similar to real-world projects: predict what users might do; collect examples of how the user would do that; use those examples to train a machine learning model to recognise that; and script what the system should do in response when it recognises something.",
            "CALLOUT": "Going through the process of creating a machine learning project for themselves gives students an insight into how these systems are created in the real world."
        },
        "TRAININGQUANTITY": {
            "TITLE": "Collecting more training examples often improves accuracy",
            "TEXT1": "The video starts with one student's training data from their Pac-Man project. They played a simplified version of Pac-Man in Scratch.",
            "TEXT2": "They set up the game in Scratch so that every time they pressed an arrow key ('left', 'right', 'up', or 'down') as well as moving their Pac-Man character, it put the x,y coordinates for Pac-Man and the Ghost into the training bucket for that direction.",
            "TEXT3": "For example, when Pac-Man was at x=3,y=4 and the Ghost was at x=5,y=5 - they went right. That became a training example for when it's good to go right. and so on.",
            "TEXT4": "They used these examples to train their own machine learning model to be able to play the game: a machine learning model that can predict when Pac-Man should go left, right, up, or down, (based on the current location of Pac-Man and the current location of the Ghost). Their goal is to train the game so that Pac-Man can play itself, without them having to touch any of the keys at all.",
            "TEXT5": "Some students will be impatient - eager to try their model as soon as they can. Their machine-learning Pac-Man will play very badly at first.",
            "TEXT6": "With only a few training examples, their Pac-Man might not have even learned enough to navigate the maze and can get stuck in a corner or against a wall.",
            "TEXT7": "They go back and do a bit more training, and collect more training examples of them playing. With a few more examples, they see Pac-Man able to navigate the maze but it gets caught by the Ghost very quickly.",
            "TEXT8": "They do even more training - collecting more examples, and they see their Pac-Man surviving a little longer. ",
            "TEXT9": "They play more and more, adding more training examples, and see their Pac-Man start to play well. By the end of the lesson, they've collected a large number of training examples, and some students will see their Pac-Man able to evade the Ghost forever. ",
            "TEXT10": "What these students stumble onto is the correlation between the amount of training data, and the accuracy of a machine learning model. ",
            "TEXT11": "This is a crucial principle in applying machine learning technologies, but instead of being told that as a rule, students can discover this for themselves through observing the performance of their own machine learning model - noticing how it improves as they add more training examples. ",
            "CALLOUT": "Giving students freedom to experiment with their machine learning model lets them learn for themselves about the relationship between the quantity of training data and the accuracy of machine learning models."
        },
        "CROWDSOURCING": {
            "TITLE": "Crowdsourcing and gamification can help to generate training data",
            "TEXT1": "I like running <a href='/#!/stories/ml-workflow'>projects like Pac-Man</a> (where students collect training examples by playing a game) with a class after they've done a project like <a href='/#!/stories/correlation-of-quantity-with-accuracy'>chatbots</a> (where students collect training examples by typing them in).",
            "TEXT2": "There will often by at least one (shamelessly honest!) student in the class who will tell me that typing in example questions to train a chatbot is 'boring'! And that they think creating training examples for Pac-Man by playing a video game is 'fun', 'easier', and just 'better'.",
            "TEXT3": "This is a useful learning experience for the students, because - they're not wrong!",
            "TEXT4": "Collecting and labelling training examples in machine learning projects is a chore. It is often manual. It is repetitive. It is almost always time-consuming. ",
            "TEXT5": "But students do understand that <a href='/#!/stories/correlation-of-quantity-with-accuracy'>projects <strong>need</strong> a lot of training examples to be successful</a>.",
            "TEXT6": "It's helpful to allow students to notice all of this for themselves, and encourage them to discuss the challenges this brings to real-world AI projects. I've seen classes have fascinating and constructive discussions once they realise that making the creation of training data into a game is one way to help.",
            "TEXT7": "Games are an effective tool for teaching students about machine learning, and several of the <a href='/worksheets'>project worksheets</a> available through Machine Learning for Kids are based on games.",
            "TEXT8": "For example, noughts and crosses (or tic tac toe) is a great basis for a project.",
            "TEXT9": "As with <a href='/#!/stories/ml-workflow'>Pac-Man</a>, students play the game in Scratch, coding the game so that every time they make a move, the state of the game board is added to one of their training buckets.",
            "TEXT10": "They can use these training examples to train a machine learning model to be able to play noughts and crosses.",
            "TEXT11": "Students can do this individually, with each of them training their own custom machine learning model, and seeing how it behaves in response to their own training.",
            "TEXT12": "I remember running one class where the students realised how much quicker and easier this would be if they worked together.",
            "TEXT13": "Instead of each student setting up their own training buckets, they asked if they could have one set of training buckets for the whole class, that they all add training examples to.",
            "TEXT14": "This was inspired. (<em>At the time, I had to let them all share a username and password to do this, but it went so well I ended up modifying the site to support group/class projects</em>.)",
            "TEXT15": "Thirty students can create training examples 30x times faster than one student working on their own.",
            "TEXT16": "In the time available in one lesson, thirty students can create 30x as much training data as one student working alone.",
            "TEXT17": "And (<a href='/#!/stories/correlation-of-quantity-with-accuracy'>as students normally realise</a>) the more training examples they can create, the better their model will be at playing the game.",
            "TEXT18": "(In fact, this tends to improve the quality of the training data <strong>as well as</strong> quantity, because it tends to result in more varied examples. This is a nuance that <a href='/#!/stories/variety-of-training-data'>students find easier to recognise in more visual projects</a>.)",
            "TEXT19": "This sort of project planning are all key parts of planning a lot of successful real-world machine learning projects, whether it's finding ways to crowdsource the generation of training data, or to create training data as a by-product of something that people are already doing or that they would enjoy doing anyway.",
            "TEXT20": "Students understand the fundamentals for why this is done, and can often think of approaches like this themselves based on their first-hand experiences in the classroom.",
            "CALLOUT1": "Students can see for themselves how gamification is a great way to motivate people to create a lot of training data.",
            "CALLOUT2": "Students can see for themselves how crowd-sourcing the generation of training data is a great way to more easily create a large amount of training data."
        },
        "VARIETY": {
            "TITLE": "Increasing diversity of training data often improves accuracy",
            "TEXT1": "Students can make a Scratch project to play Rock, Paper, Scissors. They use their webcam to collect example photos of their hands making the shapes of 'rock' (fist), 'paper' (flat hand), and 'scissors' (two fingers). Then they use those photos to train a machine learning model to recognise their hand shapes.",
            "TEXT2": "I often have at least one enthusiastic (or impatient!) student keen to create their machine learning model as quickly as possible. They'll hold their hand fairly still in front of the webcam, and keep hitting the camera button. The result is that they'll take a large number of very similar photos.",
            "TEXT3": "Other students will naturally create a range of different photos. They'll take some photos of their left hand, and some photos of their right hand. They'll take some photos of their hand held very close to the webcam looking large in the photo, and they'll take some photos of their hand held far away from the webcam looking small. They'll take photos of their hand in a variety of directions, and from a variety of angles.",
            "TEXT4": "If left to experiment and encouraged to compare their projects, students will notice differences in the way that their different projects behave.",
            "TEXT5": "Projects trained with a wider variety of training examples often perform better. Their models make fewer mistakes and have a higher confidence score for hand shapes they recognise correctly.",
            "TEXT6": "Projects trained with a very similar set of training examples make more mistakes, particularly when students play each other's Rock, Paper, Scissors holding with their hand in a position or at an angle that was different to the way it was trained.",
            "CALLOUT": "Letting students try each other's project allows them to see that machine learning models trained with a wider variety of training examples perform better. "
        },
        "TESTDATA": {
            "TITLE": "Training and test data should be kept separate",
            "TEXT1": "I remember talking with a teacher about media literacy lessons they were doing with their class. The class was learning how different media outlets cover the news, not just which stories they choose to cover, but also the different language they use to describe the same stories",
            "TEXT2": "The teacher wanted a way to consolidate what the students had learned, which got us thinking: could a computer learn to recognise the sorts of patterns they had been learning?",
            "TEXT3": "And could we use an AI project to reinforce, and get the students to think about, what they'd been learning?",
            "TEXT4": "I helped his class give it a try. They chose four national newspapers, and they worked together to collect examples of the top front-page headline for each newspaper across a few months.",
            "TEXT5": "We used these examples to train a machine learning model.",
            "TEXT6": "The next question was how the students could tell if the computer had learned to recognise the use of language in the different newspapers.",
            "TEXT7": "They made a game in Scratch to test it: when they typed in a headline, the machine learning model predicted which newspaper that came from, and moved the newspaper to the right shelf.",
            "TEXT8": "The students started by using the same headlines for this that they'd collected for training.",
            "TEXT9": "I asked them if they thought that was a good test. They were confused by this, and didn't see where I was going with it at first.",
            "TEXT10": "I used the tests and exams they do in school as an example. I asked them: 'Do your exams all have the exact same questions, written in the exact same wording, that you studied in class?'",
            "TEXT11": "They said 'no, of course not'. So I asked them why not.",
            "TEXT12": "With a little prompting, they described how they get new questions for exams they haven't seen before because that is a fairer way of seeing if they've really understood the idea rather than just memorized an answer.",
            "TEXT13": "By this point, they had realized where I was going with this. And they started collecting new newspaper headlines for testing, that weren't already used in the training data.",
            "TEXT14": "From their experience with this project, they learned that they needed to test with new and different headlines to really know if their machine learning model had learned how different newspapers use language.",
            "CALLOUT": "Machine learning projects need to keep training and test data separate."
        },
        "NOTJUSTINTENTS": {
            "TITLE": "Machine learning can learn to recognize different types of patterns",
            "TEXT1": "Projects like <a href='/#!/stories/correlation-of-quantity-with-accuracy'>chatbots</a> can perhaps give students the impression that machine learning classifiers in text projects can only be used to recognise the meaning of text ('intent classification'). I like to run other projects with classes that I work with to show them the other ways that the tech can be used",
            "TEXT2": "'Make Me Happy' is a nice example. I ask students to create two training buckets.",
            "TEXT3": "In one bucket, they type examples of the nicest, kindest compliments they can think of.",
            "TEXT4": "In the second bucket, they type examples of the meanest, cruellest insults they can think of.",
            "TEXT5": "They use these examples to train a machine learning model to recognise the use of language in compliments as opposed to insults.",
            "TEXT6": "They make a character in Scratch that reacts to what you say to it - and then <a href='/#!/stories/separation-of-training-and-test-data'>test their model</a> by sending compliments and insults to their character.",
            "TEXT7": "(<em>My favourite one of these was a student who drew a cartoon dog that would wag its tail when they said something nice to it, and looked sad when they said something mean to it! I don't have their artistic skill, so I used emojis instead</em>)",
            "TEXT8": "I've seen projects like this get students thinking about the different ways that text classifiers can be used - such as recognising writing style (e.g. formal vs informal), sentiment (e.g. positive vs negative), as well as tone.",
            "TEXT9": "This is a great jumping off point for engaging students with a discussion about how and where this technology should be used, such as marketing, human relations, and customer relations. ",
            "TEXT10": "Students are well placed to have discussions in how AI/ML technologies should be applied when they can draw on the insights from first-hand experiences of experimenting with these technologies.",
            "CALLOUT": "Machine learning can learn to recognize a wide variety of types of patterns in text, not just the meaning or intent of the text."
        },
        "COLLECTINGERRORS": {
            "TITLE": "Collecting poorly handled inputs to add to training is a common practice",
            "TEXT1": "Digital assistants, such as Amazon's Alexa or Google's Home, is a great basis for student projects, because it is a use case that the students are familiar with.",
            "TEXT2": "A project I've run many times is to help students create their own virtual assistant in Scratch, by training a machine learning model to recognise commands like \"turn on a lamp\". They do this by collecting examples of how they would phrase those commands.",
            "TEXT3": "By the time I do this project, my classes will normally have learned that they need to <a href='/#!/stories/separation-of-training-and-test-data'>test their machine learning model with examples they didn't use for training</a>.",
            "TEXT4": "Students like trying to break things - they enjoy looking for edge cases that will trip up the machine learning model. In this case, it can be unusual ways of phrasing commands that their model won't recognise.",
            "TEXT5": "I remember one student came up with 'activate the spinny thing!' as a way of asking to turn on a fan, which I thought was inspired.",
            "TEXT6": "But when the model gets something wrong, what should they do about that?",
            "TEXT7": "Students will normally suggest by themselves that a good thing to do is to collect examples of what their machine learning model gets wrong, and add those to one of their training buckets.",
            "TEXT8": "That means every time it makes a mistake, they can add that to their training, and train a new model - and their model will get better at recognizing commands like that in future.",
            "TEXT9": "They typically think of this for themselves, because with a little understanding about how machine learning technology behaves, this is a natural and obvious thing to do.",
            "TEXT10": "But when Amazon was found to be doing this, maintsteam media was surprised.",
            "TEXT11": "Really surprised. Shocked.",
            "TEXT12": "Many articles included journalists saying that they had no idea this was something a machine learning project might want to do.",
            "TEXT13": "Students who've worked through a similar process for themselves can easily understand the motivation.",
            "TEXT14": "This is <strong>not</strong> to say that students automatically think it's acceptable or appropriate.",
            "TEXT15": "Most classes I've run are typically mixed on this issue: some students think it's reasonable, while others think it's inappropriate. And I've watched them have some fantastic debates about it.",
            "TEXT16": "The crucial thing is that they debate this in the context of an understanding of the technology, and an understanding of the motivation of the tech companies (an understanding that is often lacking in media reporting).",
            "CALLOUT": "First-hand experience with machine learning technologies gives students a crucial insight into the behaviour and motivations of tech companies."
        },
        "CONFIDENCESCORES": {
            "TITLE": "How to use confidence scores",
            "TEXT1": "Machine learning models don't just give an answer, they also typically return a score showing how confident the system is that it has correctly recognized the input.",
            "TEXT2": "Knowing how to use this confidence score is an important part of using machine learning.",
            "TEXT3": "An example of how a student used this in their project is shown in the video. Their Scratch script says that if the machine learning model has less than 50% confidence that it has correctly recognized a command, it replies \"I'm sorry I don't understand\" (instead of taking an action).",
            "TEXT4": "The project was trained to understand commands to turn on a lamp or a fan. When they asked it to \"Make me a cheese sandwich\", their assistant didn't try to turn the lamp or fan on, it said \"I don't understand\"",
            "TEXT5": "This command was unlike any of the example commands that had been used to train the model, causing the machine learning model to have a very low level of confidence that it had recognised the command. This was represented with a very low confidence score. ",
            "TEXT6": "The challenge for the students making this project was knowing what confidence score threshold to use. Instead of telling them a good value to use, I let them try out different values and decide for themselves. By playing and experimenting with it, they get a feel for the impact that this threshold has on their project.",
            "TEXT7": "What they learned was that there isn't one \"correct\" confidence threshold that makes sense for all projects or for all machine learning models.",
            "TEXT8": "What I mean is, they noticed that if they set the confidence threshold very very low, their assistant would almost always take an action. But it would do this even when it hadn't understood the command correctly, taking the wrong action.",
            "TEXT9": "Conversely, if they set the confidence threshold very very high, their assistant would only take an action when it was very very confident that it had correctly recognized the command. The good thing was that, when it took an action, it rarely took the wrong action.",
            "TEXT10": "But the bad thing was that it said \"I don't understand\" very often, <em>even when actually it had correctly understood what they'd asked</em>.",
            "TEXT11": "It was fascinating hearing students describe their assistant configured like this as being too \"shy\" or \"timid\", and that it \"didn't have enough self-confidence\". My favourite description was a student who described their machine learning-powered assistant as being like when they don't put their hand up in class to answer a question, even when they actually knew the answer, but aren't confident enough that they have the right answer.",
            "TEXT12": "They were able to recognise and describe these two behaviours for themselves - purely through their own playing and experimenting.",
            "TEXT13": "This also sparked a great conversation about when those different types of behaviours are appropriate. For some applications, such as a machine learning system used by doctors, they said they would want a cautious system that doesn't risk getting things wrong. For other applications, such as machine learning systems that recommend what song they should listen to next, it is better that the system tries when it has an answer, and is okay if it sometimes makes mistakes.",
            "CALLOUT": "Students learn how to effectively use confidence scores returned by machine learning models by playing, experimenting, and seeing the difference that different confidence thresholds make."
        },
        "BLACKBOX": {
            "TITLE": "There are ways to deal with the 'black box challenge'",
            "TEXT1": "This started out as a fun simple project. Students trained a machine learning model to recognise a few different toy figures.",
            "TEXT2": "For example, the machine learning model in the image shown here was trained to recognise The Doctor, Gandalf and a Ghostbuster.",
            "TEXT3": "The students were curious why their machine learning model was recognising each toy figure. What was it about that picture of The Doctor that the computer had learned to recognise as The Doctor?",
            "TEXT4": "There are adult developers that I've worked with who would declare that there is no way of knowing. They would say that machine learning models are a \"black box\" and that we can't tell anything about why they produce the output that they do.",
            "TEXT5": "What I love about working with children is that they can sometimes be less constrained by those kind of assumptions about things that \"aren't possible\".",
            "TEXT6": "They came up with some guesses. For example, the empty top-left corner probably wasn't significant, right?",
            "TEXT7": "We had some time in the lesson so I encouraged them to test their instincts.",
            "TEXT8": "They edited the image - covering up the patch they guessed wouldn't be significant, and then got the machine learning model to recognise the overall image again.",
            "TEXT9": "Their model still recognised the image as The Doctor, and the confidence in that was almost unchanged.",
            "TEXT10": "That seemed to confirm their guess: that part of the image wasn't significant in why the machine learning model recognised this as The Doctor.",
            "TEXT11": "They tried this again. This time they covered up the upper body.",
            "TEXT12": "Instinctively, they felt like it should be more signficant. Again, their testing appeared to confirm that.",
            "TEXT13": "The model still recognised it as The Doctor, but the confidence score had dropped by over 20%. This suggested that the body was a significant part of why the model recognised it as The Doctor.",
            "TEXT14": "Some of the results from their testing surprised them. Covering the left foot appeared to be very significant - it caused the confidence score to drop to fifty-six percent. I have no idea why, but it was very interesting to see!",
            "TEXT15": "They spent the rest of the lesson experimenting like this, covering different parts of the image, and seeing the difference it made to the confidence score each time.",
            "TEXT16": "I loved the way that lesson went, and I enjoyed watching the insight that they got from doing it. After the lesson I took this idea away and came up with a Scratch script that could automate what they'd done manually for themselves.",
            "TEXT17": "I made a Scratch script that moved that black sprite to every possible space on the webcam image, recording the difference it made to the confidence score at each location. Then I used those differences to make a visualisation. The visualisation put the black squares back, with the transparency set to be proportional to the difference it made to the confidence score.",
            "TEXT18": "The script created visualisations like this. ",
            "TEXT19": "I showed the class the Scratch script in my next lesson with them the following week. It was just an automation of what they'd done for themselves. It was simple, but an effective way of giving a little insight into the question they'd asked me the week before: \"What is it about this webcam picture that the machine learning model recognised as The Doctor?\"",
            "TEXT20": "I loved that they'd found an answer for themselves, by playing, experimenting, and discussing, and all using Scratch blocks that they're familiar with already.",
            "TEXT21": "They did all of this in spite of the \"black box challenge\". Perhaps they benefitted from not starting from a position of thinking that it would not be possible.",
            "CALLOUT": "The flexibility of blocks in Scratch provide students with opportunities to explore the behaviour of machine learning models in creative ways."
        },
        "LEARNINGWRONGTHING": {
            "TITLE": "Machine learning doesn't always learn what we intend it to",
            "TEXT1": "Some of the best lessons I've run have been where a machine learning model did the \"wrong\" thing. Students learn a lot from seeing an example of machine learning not doing what we want.",
            "TEXT2": "Perhaps my favourite example of when something went wrong was a lesson that I did on Rock, Paper, Scissors.",
            "TEXT3": "Students make a Scratch project to play Rock, Paper, Scissors. They use their webcam to collect example photos of their hands making the shapes of rock (fist), paper (flat hand), and scissors (two fingers) - and use those photos to train a machine learning model to recognise their hand shapes.",
            "TEXT4": "It this particular lesson, the project worked really nicely for nearly all the students. There was one student where things went a little bit wrong.",
            "TEXT5": "This student had collected a decent set of training photos of their hand in a 'rock' shape. And a good set of training photos of their hand making a 'scissors' shape.",
            "TEXT6": "While they were taking their training photos of their hand making the 'paper' shape, one of their friends in the class had come over to chat to them.",
            "TEXT7": "Their friend was stood next to them while they were taking nearly all of these photos. And because of the way their webcam was angled, their friend was visible in nearly all the 'paper' training photos.",
            "TEXT8": "None of us spotted that at first. None of us thought anything of it.",
            "TEXT9": "Their machine learning model learned that a photo of a hand meant 'rock' or 'scissors', depending on the hand shape.",
            "TEXT10": "But it learned that a photo of a hand and a person meant 'paper'.",
            "TEXT11": "We only noticed this when the student started playing Rock, Paper, Scissors against the computer. When his teacher or I came around to see how he was getting on and stood by him, his machine learning model kept reporting that he was doing 'paper', <strong>whatever hand shape he made</strong>.",
            "TEXT12": "For example, he'd have his hand in a 'rock' shape, but if we were stood by him, the machine learning model reported that he was doing 'paper'. When we stepped away, it correctly recognised he was doing 'rock'.",
            "TEXT13": "It took us a little while to work out what was going on. When we eventually spotted what had happened, it became a fantastic, albeit unplanned, lesson for the class.",
            "TEXT14": "I think they learned more from that one student's project than anything I had planned for the lesson.",
            "TEXT15": "Because seeing things go wrong is such a useful experience for students, I don't always rely on it to happen in an unplanned way. Sometimes I have to resort to planting a trap if there's something I want students to see happen.",
            "TEXT16": "For example, in one lesson, I helped students train a machine learning model to recognise whether a photo shows an apple or a tomato.",
            "TEXT17": "I told them that I was saving them time by pointing them at where they could find images to use for training.",
            "TEXT18": "You can probably see what I was planning with this from the screenshot: I'd pointed them at photos of green apples and red tomatoes.",
            "TEXT19": "They used these to train a machine learning model.",
            "TEXT20": "I helped them to make a test in Scratch - something that would take a new set of test photos and sort them into two groups: apples and tomatoes.",
            "TEXT21": "Again, I told them that I was being helpful, and I gave them a set of test photos to use. But I gave them a bunch of photos of red apples, and (unripe) green tomatoes.",
            "TEXT22": "Predictably, their machine learning models made many mistakes.",
            "TEXT23": "Their models had learned that red objects are normally tomatoes, and green objects are normally apples. Because that's what we had taught it. But that isn't always true",
            "TEXT24": "That was a little contrived, but it was still useful. It got the students thinking about how things can go wrong and the things we can do to try and avoid that.",
            "TEXT25": "Examples of this sort of mistake are sometimes reported in the media, such as an image classifier trained to recognise skin tumours that accidentally learned to recognise rulers in medical photos. Those are useful lessons, but seeing this happen for themselves gave that class a unique insight, whether it happens organically or is orchestrated and planned.",
            "CALLOUT": "Machine learning models learn from patterns in the training data that we give them, whether or not those are patterns we'd intended to give."
        },
        "CONFUSED": {
            "TITLE": "Inputs that aren't represented in training may not be recognised correctly",
            "TEXT1": "Some of the best lessons I've run have been where a machine learning model did the \"wrong\" thing. Students learn a lot from seeing an example of machine learning not doing what we expect.",
            "TEXT2": "In one lesson, I'd asked the class to find photos of cows and sheep, and use this to train a machine learning model. My plan was that we'd use this to make a virtual artificial intelligence sheepdog: something that could recognise photos of cows or sheep on a virtual farm, and sort them, moving each animal photo them to the correct area of the farm.",
            "TEXT3": "To save time, I'd prepared the test photos for them - I collected photos of cows and sheep that they could use in a Scratch sheepdog project.",
            "TEXT4": "This was the first time I ran this project, and one group of boys did something I hadn't expected. For their training examples, they'd collected a bunch of cartoon pictures of cows and sheep.",
            "TEXT5": "When they ran the Scratch project, and tested their machine learning model with my photos of cows and sheep, it recognised everything as a sheep.",
            "TEXT6": "I love it when things go wrong like that, because it leads to great conversations.",
            "TEXT7": "The students said things like: \"We've taught the computer to recognise cartoons. We didn't know you wanted it to recognise photos, so we didn't teach it how to do that. It hasn't learned to be able to recognise photos.\"",
            "TEXT8": "I asked them what they thought we should do.",
            "TEXT9": "One student said that my test pictures weren't fair, and that I should replace them with cartoon pictures - because their model should be able to sort that.",
            "TEXT10": "Another student said that if they went back to their training examples and added photos, then their model could learn to recognise both cartoons and photos, and might do better at my test.",
            "TEXT11": "Those were both great answers!",
            "CALLOUT": "When students train a machine learning model to do one thing, they can see how it might not be very good at doing a different thing."
        },
        "BIAS": {
            "TITLE": "Bias and the responsibility of the machine learning developer",
            "TEXT1": "Recommendation engines are a good topic for student projects. They're a common use of machine learning that most students will have interacted with before, such as streaming services recommending what song or video they might next want to listen to or watch. Making a simplified recommendation system for themselves is a good way for students to gain insight into how these systems are created.",
            "TEXT2": "One example of the sort of projects I've done with students for this is to help them make an app that recommends places that someone might want to visit while on vacation. They do this by training a machine learning model using examples of how people might describe their likes and interests.",
            "TEXT3": "Their app can then use this model to start making recommendations - they tell it what sort of thing that they like, and it uses that to suggest a place that they might like to visit.",
            "TEXT4": "What I like about this project is giving students a little time to play and experiment and see what happens. For example, if they add two similar vacation places, such as a funfair and a theme park, how will their model handle that? I encourage them to try different ways of doing this. ",
            "TEXT5": "For example, students can try adding many, many training examples to their training bucket for 'theme park', and hardly any examples to their training bucket for 'funfair', and then see for themselves what happens.",
            "TEXT6": "The result of doing this is typically that any time they mention about enjoying doing anything fun or exciting, or mention enjoying rides or adrenaline, then their app will recommend the theme park. Sometimes they can hardly get their app to recommend the funfair at all.",
            "TEXT7": "I ask students why they think this happens, and they always immediately understand the cause. They might not use the same words that I might to describe it. They won't start talking about 'bias', for example, but they will explain why this happens by saying things like:",
            "TEXT8": "\"I've told the computer that the right answer is theme park loads of times\"",
            "TEXT9": "\"I hardly ever told the computer that the right answer was funfair\"",
            "TEXT10": "I've seen this be a real surprise to students. Students often start out with an assumption that the machine learning systems with the \"smartest\" code or the \"best\" algorithms will give the correct answers. And that machine learning systems with \"dumb\" code or \"bad\" algorithms give the wrong answers.",
            "TEXT11": "But what students see is that it isn't just that. In fact it isn't even mostly that. Rather the biggest impact on the way that the application behaves comes from the person who collects the training examples, and the way they collect the examples.",
            "TEXT12": "That is often a real surprise, and a crucial insight for them to learn about machine learning projects.",
            "TEXT13": "Once they understand how the machine learning tech behaves, through first-hand experimentation and experiences, I ask the students what they think of that.",
            "TEXT14": "What if this was a real vacation recommendation app? What if it was really trained like this, to regularly recommend the theme park and rarely recommend the funfair?",
            "TEXT15": "Many of them will still be unconcerned. They'll say things like \"It's just a holiday app. It doesn't matter.\"",
            "TEXT16": "I up the stakes by asking something like \"What if you trained the app like this (to regularly recommend the theme park by putting many more training examples for the theme park) because the owner of the theme park gave you a big sack of cash? Is that still okay?\"",
            "TEXT17": "At this point, as money is involved, some of the class start to change their mind. Some of them start to argue that this would be a bad thing. But not all - some of them will still be unconcerned about the way that a holiday app is created.",
            "TEXT18": "So I up the stakes further and ask \"What if this was an AI app for doctors? What if this app was recommending the best medicine to give, based on a description of someone's symptoms? What if the person training the app made sure they used a lot of training examples of when one particular medicine was the best choice, and hardly any examples of when another medicine was the best choice? And what if they did all of this because the manufacturer of azaphine gave them a big sack of cash?\"",
            "TEXT19": "At this point, most of the class will start to be concerned. I've heard primary school students make amazingly thoughtful and passionate arguments about ethics in AI, the need for oversight in how AI is used in fields like medicine, and the need for transparency in training data used for machine learning applications in critical applications.",
            "TEXT20": "They didn't use any of those words, but children have an innate sense of justice, what they think is fair, and what they think is right and wrong. With a little insight into what is possible, they are entirely able to engage intelligently in these kinds of debates.",
            "CALLOUT": "By experimenting with their own machine learning model, students can see how easy it is to introduce bias into AI applications - which enables them to engage in debates on ethics in AI."
        },
        "SOLUTIONS": {
            "TITLE": "Combining machine learning models can make a powerful app",
            "TEXT1": "Once students have made a few simple projects, I like to help them to make a project that includes multiple machine learning models. ",
            "TEXT2": "For example, 'Laser Eyes' is a project where students need to shoot bottles using laser beams from their eyes, by moving their head to the right place and then shouting 'Laser Eyes!'.",
            "TEXT3": "It's a fun and silly game, made using a combination of two machine learning models: a face detection model to recognise where their eyes are in the webcam, and a sound machine learning model that they have to train to recognise when they shout out 'Laser Eyes'.",
            "TEXT4": "There are many other ways to make something that blends multiple models.",
            "TEXT5": "For example, I've helped students make chatbots that combine three machine learning models: one text model that they train to <a href='/#!/stories/ml-workflow'>recognise the meaning of the question</a> that has been asked, a second text model that they train to <a href='/#!/stories/not-just-intents'>recognise when the use of language in the questions suggest that the user is getting annoyed or frustrated</a>, and a third speech to text model that means someone can ask questions without having to type.",
            "TEXT6": "This sort of project is a good choice when I'm working with a class over multiple weeks, as each new week I can introduce a new use of machine learning that they can add to an existing app that we build up over time. The final result is often very impressive!",
            "TEXT7": "I've found that assembling a solution from a blend of multiple machine learning models helps students to recognise uses of AI/ML in the world around them. When they think of the relationship between a machine learning model and the main function of an app as being a one-to-one relationship, they only recognise the most obvious and visible AI applications where the primary function of the app is a machine learning capability. But when they start to think of machine learning as offering a tiny capability as part of a larger app doing multiple things, it starts to open their eyes up to many other possible uses of machine learning. They start to recognise how <a href='/#!/stories/invisible-ai'>artificial intelligence is all around us</a>.",
            "CALLOUT": "Helping students to create an application that combines multiple machine learning models gives them a much more realistic insight into the way that the technologies are used in the real-world."
        },
        "MISUSING": {
            "TITLE": "What happens when machine learning models are used for things they weren't trained to do",
            "TEXT1": "Once students have an understanding of what machine learning technologies can do and how they behave, I like to get them thinking about how they should be used.",
            "TEXT2": "For this project, I had two small groups of students.",
            "TEXT3": "I asked one group of students to train a computer to recognise <strong>photos of fruit</strong>. They chose a few types of fruit (plum, banana, pear) and started collecting training images of each to use to train a machine learning model.",
            "TEXT5": "I asked the other group of students to train a computer to recognise <strong>photos of creatures</strong>. They chose a few types of creature (fish, insect, bird) and started collecting training images of each to use to train a machine learning model.",
            "TEXT7": "I didn't tell them what we'd be using these for until they'd finished. ",
            "TEXT8": "Once their machine learning models were ready, I revealed what we'd be doing: asking the computer to recognise ink blot pictures.",
            "TEXT9": "We made a Scratch project that would show an inkblot image to both of the groups' machine learning models. ",
            "TEXT10": "Given the same inkblot image, one of the models recognised it as a fish, insect, or bird. The other model recognised the same image as a plum, banana, or pear. Both machine learning models were trained using the same technology, yet were giving very different answers to the same question.",
            "TEXT11": "When I asked the students to explain why this would happen, they intuitively gave sensible explanations:",
            "TEXT12": "\"We've only trained this model to be able to recognise things as fish/insect/bird so that is all it knows how to do\"",
            "TEXT13": "\"We've taught this model that everything is either a fish, insect, or bird so it's learned that everything is either a fish, insect, or bird\"",
            "TEXT14": "My reason for getting them to work through this was a machine learning project that had received some media coverage a year or so earlier. The project, called 'Norman', involved training a machine learning system to recognise images from horror films, and then using that model to generate descriptions of ink blot images. What the students had created was a much-simplified version of that same project, with a similar outcome.",
            "TEXT15": "The students went through a collection of the media reports about the 'Norman' project, and discussed what they thought of the way the project was described in the media.",
            "TEXT16": "A lot of the media coverage relied on anthropomorphizing the machine learning model - describing how the AI had been \"traumatized\" by being forced to \"watch\" a lot of horror films. From their experience making a similar project, the students saw it differently, describing it as a model that has been trained to recognise that everything is a scene from a horror film, so all it has learned to do is describe scenes from horror films. The media coverage described the machine learning model as being a psychopath. The students discussed whether they thought that a machine learning model that has only been trained with negative or upsetting images should be described as having a psychiatric disorder.",
            "TEXT17": "What I liked most out of that lesson was that it got the students to think critically about how artificial intelligence is portrayed in the media, and to start forming their own opinions about the issues raised there.",
            "CALLOUT": "If machine learning models are used to do something that is very different to what they were trained to do, the results might be unexpected or invalid."
        },
        "INVISIBLEAI": {
            "TITLE": "Invisible artificial intelligence systems are everywhere",
            "TEXT1": "In this project, students trained a machine learning model to recognise the first bit of the postcode for a few local cities. (<em>For non-UK readers, this is equivalent to something like a zip-code or perhaps the two-letter abbreviation for a name of a state or county</em>).",
            "TEXT2": "They did this by drawing examples of how those postal codes are written, directly onto an on-screen canvas.",
            "TEXT3": "They used this to make a game in Scratch based on the children's television show <em>Postman Pat</em>, where they would write a postcode onto an on-screen envelope, and their machine learning model would recognise what they had written and move the envelope to the correct <em>Postman Pat</em> van.",
            "TEXT4": "My goal for the project was to introduce them to the idea of using machine learning for handwriting recognition, and optical character recognition in general. Instead of just telling them that this tech exists, they learned about it through playing and experimenting with a simplified version that created themselves. Although their own models could only recognise a few letters, this was still enough to help them understand what was possible.",
            "TEXT5": "While they were interested in the technology, what seemed to have the biggest impact on the students was the idea that artificial intelligence is used when they post a letter. This was something that they hadn't thought of before. It opened up their eyes to the idea that AI systems are all around us. They started asking questions about where else machine learning models are used.",
            "TEXT6": "The takeaway for the lesson was that it got them thinking about how they interact with artificial intelligence systems every day, even when they don't directly see it.",
            "CALLOUT": "Creating projects based on real-world applications of machine learning is an effective way to open up students' eyes to the fact that AI systems are all around them, and impact their lives in countless unseen ways."
        }
    }
}
